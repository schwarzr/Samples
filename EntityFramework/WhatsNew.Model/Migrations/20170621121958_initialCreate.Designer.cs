// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using System;
using WhatsNew.Model;

namespace WhatsNew.Model.Migrations
{
    [DbContext(typeof(SampleContext))]
    [Migration("20170621121958_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-preview1-24937")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WhatsNew.Model.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name_de")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Name_en")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("WhatsNew.Model.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<int>("CustomerId");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<bool>("IsDeleted");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("WhatsNew.Model.Address", b =>
                {
                    b.Property<int?>("CustomerId");

                    b.Property<string>("City")
                        .HasMaxLength(200);

                    b.Property<string>("Street")
                        .HasMaxLength(200);

                    b.Property<string>("ZipCode")
                        .HasMaxLength(200);

                    b.HasKey("CustomerId");

                    b.ToTable("Customer.HomeAddress->Address");
                });

            modelBuilder.Entity("WhatsNew.Model.Address", b =>
                {
                    b.Property<int?>("CustomerId");

                    b.Property<string>("City")
                        .HasMaxLength(200);

                    b.Property<string>("Street")
                        .HasMaxLength(200);

                    b.Property<string>("ZipCode")
                        .HasMaxLength(200);

                    b.HasKey("CustomerId");

                    b.ToTable("Customer.WorkAddress->Address");
                });

            modelBuilder.Entity("WhatsNew.Model.Invoice", b =>
                {
                    b.HasOne("WhatsNew.Model.Customer", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WhatsNew.Model.Address", b =>
                {
                    b.HasOne("WhatsNew.Model.Customer")
                        .WithOne("HomeAddress")
                        .HasForeignKey("WhatsNew.Model.Address", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WhatsNew.Model.Address", b =>
                {
                    b.HasOne("WhatsNew.Model.Customer")
                        .WithOne("WorkAddress")
                        .HasForeignKey("WhatsNew.Model.Address", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
        }
    }
}
