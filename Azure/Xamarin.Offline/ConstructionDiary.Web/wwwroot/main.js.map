{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/countries/countries-list.component.html","webpack:///./src/app/countries/countries-list.component.ts","webpack:///./src/app/countries/country-create.component.ts","webpack:///./src/app/countries/country-edit.component.html","webpack:///./src/app/countries/country-edit.component.ts","webpack:///./src/app/dashboard/dasbhoard.component.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/employees/employee-create.component.ts","webpack:///./src/app/employees/employee-edit.component.html","webpack:///./src/app/employees/employee-edit.component.ts","webpack:///./src/app/employees/employees-list.component.html","webpack:///./src/app/employees/employees-list.component.ts","webpack:///./src/app/issue-types/issue-type-create.component.ts","webpack:///./src/app/issue-types/issue-type-edit.component.html","webpack:///./src/app/issue-types/issue-type-edit.component.ts","webpack:///./src/app/issue-types/issue-types-list.component.html","webpack:///./src/app/issue-types/issue-types-list.component.ts","webpack:///./src/app/issues/issue-list.component.html","webpack:///./src/app/issues/issue-list.component.ts","webpack:///./src/app/project-id.resolver.ts","webpack:///./src/app/project.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/service/service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dasbhoard.component';\r\nimport { CountriesListComponent } from './countries/countries-list.component';\r\nimport { CountryEditComponent } from './countries/country-edit.component';\r\nimport { CountryCreateComponent } from './countries/country-create.component';\r\nimport { ProjectIdResolver } from './project-id.resolver';\r\nimport { IssueListComponent } from './issues/issue-list.component';\r\nimport { IssueTypesListComponent } from './issue-types/issue-types-list.component';\r\nimport { IssueTypeEditComponent } from './issue-types/issue-type-edit.component';\r\nimport { IssueTypeCreateComponent } from './issue-types/issue-type-create.component';\r\nimport { EmployeesListComponent } from './employees/employees-list.component';\r\nimport { EmployeeEditComponent } from './employees/employee-edit.component';\r\nimport { EmployeeCreateComponent } from './employees/employee-create.component';\r\n\r\nconst routes: Routes = [{\r\n  path: 'dashboard',\r\n  component: DashboardComponent\r\n},\r\n{\r\n  path: 'countries',\r\n  children: [\r\n    {\r\n      path: '',\r\n      component: CountriesListComponent\r\n    },\r\n    {\r\n      path: 'new',\r\n      component: CountryCreateComponent\r\n    },\r\n    {\r\n      path: ':id',\r\n      component: CountryEditComponent\r\n    },\r\n\r\n  ]\r\n},\r\n{\r\n  path: 'issuetypes',\r\n  children: [\r\n    {\r\n      path: '',\r\n      component: IssueTypesListComponent\r\n    },\r\n    {\r\n      path: 'new',\r\n      component: IssueTypeCreateComponent\r\n    },\r\n    {\r\n      path: ':id',\r\n      component: IssueTypeEditComponent\r\n    }\r\n  ]\r\n},\r\n{\r\n  path: ':project',\r\n  resolve: {\r\n    project: ProjectIdResolver\r\n  },\r\n  children: [\r\n    {\r\n      path: 'issues',\r\n      children: [\r\n        {\r\n          path: '',\r\n          component: IssueListComponent\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      path: 'employees',\r\n      children: [\r\n        {\r\n          path: '',\r\n          component: EmployeesListComponent\r\n        },\r\n        {\r\n          path: 'new',\r\n          component: EmployeeCreateComponent\r\n        },\r\n        {\r\n          path: ':id',\r\n          component: EmployeeEditComponent\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n},\r\n\r\n{\r\n  path: '**',\r\n  redirectTo: 'dashboard'\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Construction Diary</a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"\\r\\n        data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\"\\r\\n        aria-label=\\\"Toggle navigation\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n\\r\\n    <div class=\\\"collapse navbar-collapse\\\" [collapse]=\\\"isCollapsed\\\" id=\\\"navbarSupportedContent\\\">\\r\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n            <li class=\\\"nav-item active\\\">\\r\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['dashboard']\\\" routerLinkActive=\\\"active\\\">Dashboard</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item active\\\" *ngIf=\\\"projectService.current\\\">\\r\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"[projectService.current.displayString,'issues']\\\"\\r\\n                    routerLinkActive=\\\"active\\\">Issues</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item dropdown\\\" dropdown>\\r\\n                <div dropdownToggle class=\\\"nav-link dropdown-toggle\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\"\\r\\n                    data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                    Masterdata\\r\\n                </div>\\r\\n                <div *dropdownMenu class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n                    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['countries']\\\" routerLinkActive=\\\"active\\\">Countries</a>\\r\\n                    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['issuetypes']\\\" routerLinkActive=\\\"active\\\">Issue types</a>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <a *ngIf=\\\"projectService.current\\\" class=\\\"dropdown-item\\\"\\r\\n                        [routerLink]=\\\"[projectService.current.displayString,'employees']\\\"\\r\\n                        routerLinkActive=\\\"active\\\">Employees</a>\\r\\n                </div>\\r\\n            </li>\\r\\n        </ul>\\r\\n\\r\\n        <form class=\\\"form-inline my-2 my-lg-0\\\">\\r\\n            <select class=\\\"form-control\\\" #p (change)=\\\"selectProject(p.value)\\\">\\r\\n                <option *ngFor=\\\"let item of projectService.projects\\\"\\r\\n                    [attr.selected]=\\\"projectService.current && projectService.current.id == item.id ? 'selected' : null\\\"\\r\\n                    [value]=\\\"item.id\\\">{{item.displayString}}</option>\\r\\n            </select>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n</nav>\\r\\n\\r\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ProjectService } from './project.service';\r\nimport { ProjectInfo } from 'src/service/service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styles: []\r\n})\r\nexport class AppComponent implements OnInit {\r\n  async ngOnInit(): Promise<void> {\r\n    await this.projectService.initialize();\r\n  }\r\n\r\n  public isCollapsed: boolean = true;\r\n\r\n  public selectProject(projectid: string) {\r\n    this.projectService.current = this.projectService.projects.filter(p => p.id == projectid)[0];\r\n  }\r\n\r\n  constructor(public projectService: ProjectService) {\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { AccordionModule } from 'ngx-bootstrap/accordion'\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\r\nimport { DashboardComponent } from './dashboard/dasbhoard.component';\r\nimport { CountriesListComponent } from './countries/countries-list.component';\r\nimport { CountryClient, ProjectClient, IssueClient, IssueTypeListItem, EmployeeClient } from '../service/service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CountryEditComponent } from './countries/country-edit.component';\r\nimport { CountryCreateComponent } from './countries/country-create.component';\r\nimport { ProjectService } from './project.service';\r\nimport { ProjectIdResolver } from './project-id.resolver';\r\nimport { IssueListComponent } from './issues/issue-list.component';\r\nimport { IssueTypeCreateComponent } from './issue-types/issue-type-create.component';\r\nimport { IssueTypeEditComponent } from './issue-types/issue-type-edit.component';\r\nimport { IssueTypesListComponent } from './issue-types/issue-types-list.component';\r\nimport { EmployeeCreateComponent } from './employees/employee-create.component';\r\nimport { EmployeeEditComponent } from './employees/employee-edit.component';\r\nimport { EmployeesListComponent } from './employees/employees-list.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    CountriesListComponent,\r\n    CountryEditComponent,\r\n    CountryCreateComponent,\r\n    IssueListComponent,\r\n    IssueTypeCreateComponent,\r\n    IssueTypeEditComponent,\r\n    IssueTypesListComponent,\r\n    EmployeeCreateComponent,\r\n    EmployeeEditComponent,\r\n    EmployeesListComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AccordionModule.forRoot(),\r\n    BsDropdownModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    CollapseModule.forRoot()\r\n  ],\r\n  providers: [\r\n    CountryClient,\r\n    ProjectClient,\r\n    IssueClient,\r\n    EmployeeClient,\r\n    ProjectService,\r\n    ProjectIdResolver\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<h1>Country List</h1>\\r\\n<a  class=\\\"btn btn-primary\\\" [routerLink]=\\\"['new']\\\">new item</a>\\r\\n\\r\\n<div class=\\\"table-responsive\\\" *ngIf=\\\"items\\\">\\r\\n    <table class=\\\"table table-striped table-hover\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th scope=\\\"col\\\">Iso</th>\\r\\n                <th scope=\\\"col\\\">Name</th>\\r\\n                <th scope=\\\"col\\\"></th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let item of items\\\" (click)=\\\"select(item)\\\" [class.table-primary]=\\\"item == selectedItem\\\">\\r\\n                <td>{{item.isoTwo}}</td>\\r\\n                <td>{{item.name}}</td>\\r\\n                <td>\\r\\n                    <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"[item.id]\\\" role=\\\"button\\\">edit</a>\\r\\n                    &nbsp;\\r\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"delete(item)\\\" role=\\\"button\\\">delete</button>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { CountryClient, CountryListItem } from '../../service/service';\r\n\r\n@Component({\r\n    selector: 'countries-list',\r\n    templateUrl: './countries-list.component.html'\r\n})\r\nexport class CountriesListComponent implements OnInit {\r\n    public items: CountryListItem[];\r\n\r\n    public selectedItem: CountryListItem;\r\n\r\n    async ngOnInit(): Promise<void> {\r\n        const data = await this.service.getCountryListItems().toPromise();\r\n        this.items = data;\r\n    }\r\n\r\n    constructor(private service: CountryClient) {\r\n\r\n    }\r\n\r\n    public select(item: CountryListItem) {\r\n        this.selectedItem = item;\r\n    }\r\n\r\n    public async delete(item: CountryListItem): Promise<void> {\r\n        await this.service.deleteCountry(item.id).toPromise();\r\n        await this.ngOnInit();\r\n    }\r\n\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { CountryClient, CountryListItem } from '../../service/service';\r\nimport { ActivatedRouteSnapshot, ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'country-create',\r\n    templateUrl: './country-edit.component.html'\r\n})\r\nexport class CountryCreateComponent {\r\n    public item: CountryListItem;\r\n\r\n\r\n    constructor(private service: CountryClient, private route: ActivatedRoute, private router: Router) {\r\n        this.item = new CountryListItem();\r\n    }\r\n\r\n    public async save(): Promise<void> {\r\n        await this.service.insertCountry(this.item).toPromise();\r\n        const url = this.getNavUrl(this.route);\r\n        await this.router.navigateByUrl(url);\r\n    }\r\n\r\n    public getNavUrl(route: ActivatedRoute): string {\r\n        var items = route.parent.snapshot.pathFromRoot;\r\n\r\n        return items.map(p => p.url.join('/')).join('/');\r\n    }\r\n}","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col align-self-center\\\">\\r\\n            <form *ngIf=\\\"item\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Iso</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [required] [maxlength]=\\\"2\\\" placeholder=\\\"Iso code\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"item.isoTwo\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                        <label >Name</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Country name\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"item.name\\\" />\\r\\n                </div>\\r\\n                \\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"save()\\\">Submit</button>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { CountryClient, CountryListItem } from '../../service/service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'country-edit',\r\n    templateUrl: './country-edit.component.html'\r\n})\r\nexport class CountryEditComponent implements OnInit {\r\n    public item: CountryListItem;\r\n\r\n    async ngOnInit(): Promise<void> {\r\n        var id = this.route.snapshot.params['id']\r\n\r\n        const data = await this.service.getCountry(id).toPromise();\r\n        this.item = data;\r\n    }\r\n\r\n    constructor(private service: CountryClient, private route: ActivatedRoute, private router: Router) {\r\n    }\r\n\r\n    public async save(): Promise<void> {\r\n        await this.service.updateCountry(this.item).toPromise();\r\n        const url = this.getNavUrl(this.route);\r\n        await this.router.navigateByUrl(url);\r\n    }\r\n\r\n    public getNavUrl(route: ActivatedRoute): string {\r\n        var items = route.parent.snapshot.pathFromRoot;\r\n\r\n        return items.map(p => p.url.join('/')).join('/');\r\n    }\r\n}","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: 'dashboard',\r\n    templateUrl: './dashboard.component.html'\r\n})\r\nexport class DashboardComponent{\r\n\r\n}","module.exports = \"<h1>Dashboard</h1>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { IssueTypeInfo, IssueClient, IssueTypeListItem, EmployeeClient, EmployeeListItem, ProjectInfo } from '../../service/service';\r\nimport { ActivatedRouteSnapshot, ActivatedRoute, Router } from '@angular/router';\r\nimport { ProjectService } from '../project.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'employee-create',\r\n    templateUrl: './employee-edit.component.html'\r\n})\r\nexport class EmployeeCreateComponent {\r\n    public item: EmployeeListItem;\r\n    private project: ProjectInfo;\r\n\r\n    constructor(private service: EmployeeClient, private route: ActivatedRoute, private router: Router) {\r\n        this.item = new EmployeeListItem();\r\n\r\n        route.data.pipe(map(p => <ProjectInfo>p.project))\r\n            .subscribe(p => { this.project = p; });\r\n    }\r\n\r\n    public async save(): Promise<void> {\r\n        await this.service.insert(this.project.id, this.item).toPromise();\r\n        const url = this.getNavUrl(this.route);\r\n        await this.router.navigateByUrl(url);\r\n    }\r\n\r\n    public getNavUrl(route: ActivatedRoute): string {\r\n        var items = route.parent.snapshot.pathFromRoot;\r\n\r\n        return items.map(p => p.url.join('/')).join('/');\r\n    }\r\n}","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col align-self-center\\\">\\r\\n            <h1>Employee</h1>\\r\\n            <form *ngIf=\\\"item\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Firstname</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" required placeholder=\\\"Firstname\\\"\\r\\n                        [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"item.firstName\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Lastname</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Lastname\\\"\\r\\n                        [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"item.lastName\\\" />\\r\\n                </div>\\r\\n\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"save()\\\">Submit</button>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { IssueTypeInfo, IssueClient, IssueTypeListItem, EmployeeClient, EmployeeListItem, ProjectInfo } from '../../service/service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'employee-edit',\r\n    templateUrl: './employee-edit.component.html'\r\n})\r\nexport class EmployeeEditComponent {\r\n    public item: EmployeeListItem;\r\n    private project: ProjectInfo;\r\n\r\n    async loadData(): Promise<void> {\r\n        var id = this.route.snapshot.params['id']\r\n\r\n        const data = await this.service.getEmployeeListItem(id).toPromise();\r\n        this.item = data;\r\n    }\r\n\r\n    constructor(private service: EmployeeClient, private route: ActivatedRoute, private router: Router) {\r\n        route.data.pipe(map(p => <ProjectInfo>p.project))\r\n            .subscribe(p => { this.project = p; this.loadData(); });\r\n    }\r\n\r\n    public async save(): Promise<void> {\r\n        await this.service.update(this.item).toPromise();\r\n        const url = this.getNavUrl(this.route);\r\n        await this.router.navigateByUrl(url);\r\n    }\r\n\r\n    public getNavUrl(route: ActivatedRoute): string {\r\n        var items = route.parent.snapshot.pathFromRoot;\r\n\r\n        return items.map(p => p.url.join('/')).join('/');\r\n    }\r\n}","module.exports = \"<h1>Employee List</h1>\\r\\n<a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['new']\\\">new item</a>\\r\\n\\r\\n<div class=\\\"table-responsive\\\" *ngIf=\\\"items\\\">\\r\\n    <table class=\\\"table table-striped table-hover\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th scope=\\\"col\\\">Firstname</th>\\r\\n                <th scope=\\\"col\\\">Lastname</th>\\r\\n                <th scope=\\\"col\\\">Created</th>\\r\\n                <th scope=\\\"col\\\">Disabled</th>\\r\\n                <th scope=\\\"col\\\"></th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let item of items\\\" (click)=\\\"select(item)\\\" [class.table-primary]=\\\"item == selectedItem\\\">\\r\\n                <td>{{item.firstName}}</td>\\r\\n                <td>{{item.lastName}}</td>\\r\\n                <td>{{item.created}}</td>\\r\\n                <td>{{item.isDisabled}}</td>\\r\\n                <td>\\r\\n                    <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"[item.id]\\\" role=\\\"button\\\">edit</a>\\r\\n                    &nbsp;\\r\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"delete(item)\\\" role=\\\"button\\\">delete</button>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { IssueTypeInfo, IssueClient, IssueTypeListItem, EmployeeListItem, EmployeeClient, ProjectInfo } from '../../service/service';\r\nimport { ProjectService } from '../project.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\nimport { ProjectIdResolver } from '../project-id.resolver';\r\n\r\n@Component({\r\n    selector: 'employees-list',\r\n    templateUrl: './employees-list.component.html'\r\n})\r\nexport class EmployeesListComponent {\r\n    public items: EmployeeListItem[];\r\n    private project: ProjectInfo;\r\n\r\n    public selectedItem: EmployeeListItem;\r\n\r\n    async loadData(): Promise<void> {\r\n        const data = await this.service.getEmployeeListItems(this.project.id).toPromise();\r\n        this.items = data;\r\n    }\r\n\r\n    constructor(private service: EmployeeClient, currentRoute: ActivatedRoute) {\r\n        currentRoute.data.pipe(map(p => <ProjectInfo>p.project))\r\n            .subscribe(p => { this.project = p; this.loadData(); });\r\n    }\r\n\r\n    public select(item: EmployeeListItem) {\r\n        this.selectedItem = item;\r\n    }\r\n\r\n    public async delete(item: IssueTypeListItem): Promise<void> {\r\n        await this.service.delete(item.id).toPromise();\r\n        await this.loadData();\r\n    }\r\n\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { IssueTypeInfo, IssueClient, IssueTypeListItem } from '../../service/service';\r\nimport { ActivatedRouteSnapshot, ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'issue-type-create',\r\n    templateUrl: './issue-type-edit.component.html'\r\n})\r\nexport class IssueTypeCreateComponent {\r\n    public item: IssueTypeListItem;\r\n\r\n\r\n    constructor(private service: IssueClient, private route: ActivatedRoute, private router: Router) {\r\n        this.item = new IssueTypeListItem();\r\n    }\r\n\r\n    public async save(): Promise<void> {\r\n        await this.service.insertIssueType(this.item).toPromise();\r\n        const url = this.getNavUrl(this.route);\r\n        await this.router.navigateByUrl(url);\r\n    }\r\n\r\n    public getNavUrl(route: ActivatedRoute): string {\r\n        var items = route.parent.snapshot.pathFromRoot;\r\n\r\n        return items.map(p => p.url.join('/')).join('/');\r\n    }\r\n}","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col align-self-center\\\">\\r\\n            <h1>Issue Type</h1>\\r\\n            <form *ngIf=\\\"item\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Title</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" required placeholder=\\\"Title\\\"\\r\\n                        [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"item.title\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Description</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Description\\\"\\r\\n                        [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"item.description\\\" />\\r\\n                </div>\\r\\n\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"save()\\\">Submit</button>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { IssueTypeInfo, IssueClient, IssueTypeListItem } from '../../service/service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'country-edit',\r\n    templateUrl: './issue-type-edit.component.html'\r\n})\r\nexport class IssueTypeEditComponent implements OnInit {\r\n    public item: IssueTypeListItem;\r\n\r\n    async ngOnInit(): Promise<void> {\r\n        var id = this.route.snapshot.params['id']\r\n\r\n        const data = await this.service.getIssueType(id).toPromise();\r\n        this.item = data;\r\n    }\r\n\r\n    constructor(private service: IssueClient, private route: ActivatedRoute, private router: Router) {\r\n    }\r\n\r\n    public async save(): Promise<void> {\r\n        await this.service.updateIssueType(this.item).toPromise();\r\n        const url = this.getNavUrl(this.route);\r\n        await this.router.navigateByUrl(url);\r\n    }\r\n\r\n    public getNavUrl(route: ActivatedRoute): string {\r\n        var items = route.parent.snapshot.pathFromRoot;\r\n\r\n        return items.map(p => p.url.join('/')).join('/');\r\n    }\r\n}","module.exports = \"<h1>Issue Type List</h1>\\r\\n<a  class=\\\"btn btn-primary\\\" [routerLink]=\\\"['new']\\\">new item</a>\\r\\n\\r\\n<div class=\\\"table-responsive\\\" *ngIf=\\\"items\\\">\\r\\n    <table class=\\\"table table-striped table-hover\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th scope=\\\"col\\\">Title</th>\\r\\n                <th scope=\\\"col\\\">Description</th>\\r\\n                <th scope=\\\"col\\\"></th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let item of items\\\" (click)=\\\"select(item)\\\" [class.table-primary]=\\\"item == selectedItem\\\">\\r\\n                <td>{{item.title}}</td>\\r\\n                <td>{{item.description}}</td>\\r\\n                <td>\\r\\n                    <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"[item.id]\\\" role=\\\"button\\\">edit</a>\\r\\n                    &nbsp;\\r\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"delete(item)\\\" role=\\\"button\\\">delete</button>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { IssueTypeInfo, IssueClient, IssueTypeListItem } from '../../service/service';\r\n\r\n@Component({\r\n    selector: 'issue-types-list',\r\n    templateUrl: './issue-types-list.component.html'\r\n})\r\nexport class IssueTypesListComponent implements OnInit {\r\n    public items: IssueTypeListItem[];\r\n\r\n    public selectedItem: IssueTypeListItem;\r\n\r\n    async ngOnInit(): Promise<void> {\r\n        const data = await this.service.getIssueTypeListItems().toPromise();\r\n        this.items = data;\r\n    }\r\n\r\n    constructor(private service: IssueClient) {\r\n\r\n    }\r\n\r\n    public select(item: IssueTypeListItem) {\r\n        this.selectedItem = item;\r\n    }\r\n\r\n    public async delete(item: IssueTypeListItem): Promise<void> {\r\n        await this.service.deleteIssueType(item.id).toPromise();\r\n        await this.ngOnInit();\r\n    }\r\n\r\n}","module.exports = \"<h1>Issues List</h1>\\r\\n<div class=\\\"table-responsive\\\" *ngIf=\\\"items\\\">\\r\\n    <table class=\\\"table table-striped table-hover\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th scope=\\\"col\\\">Title</th>\\r\\n                <th scope=\\\"col\\\">Description</th>\\r\\n                <th scope=\\\"col\\\">IssueType</th>\\r\\n                <th scope=\\\"col\\\">Assigned To</th>\\r\\n                <th scope=\\\"col\\\">Creation Time</th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let item of items\\\" (click)=\\\"select(item)\\\" [class.table-primary]=\\\"item == selectedItem\\\">\\r\\n                <td>{{item.title}}</td>\\r\\n                <td>{{item.description}}</td>\\r\\n                <td>{{item.issueType}}</td>\\r\\n                <td>{{item.assignedTo}}</td>\\r\\n                <td>{{item.createTime}}</td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { IssueClient, ProjectInfo, IssueListItem } from '../../../src/service/service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'issue-list',\r\n    templateUrl: './issue-list.component.html'\r\n})\r\nexport class IssueListComponent {\r\n\r\n    public items: IssueListItem[];\r\n\r\n    constructor(private service: IssueClient, private currentRoute: ActivatedRoute) {\r\n        currentRoute.data.pipe(map(p => <ProjectInfo>p.project))\r\n            .subscribe(p => this.loadData(p));\r\n    }\r\n\r\n    private async loadData(project: ProjectInfo): Promise<void> {\r\n        let data = await this.service.getIssues(project.id).toPromise();\r\n\r\n        this.items = data;\r\n    }\r\n}","import { ResolveData, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { ProjectInfo, ProjectClient } from '../../src/service/service';\r\nimport { ProjectService } from './project.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ProjectIdResolver implements Resolve<ProjectInfo>{\r\n\r\n    constructor(private service: ProjectClient, private projectService: ProjectService) {\r\n\r\n    }\r\n\r\n    async resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<ProjectInfo> {\r\n        let projectName = route.params.project;\r\n\r\n        var project = await this.service.getProjectByName(projectName).toPromise();\r\n\r\n        if (this.projectService.current.id != project.id) {\r\n            this.projectService.current = project;\r\n        }\r\n\r\n        return project;\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { ProjectInfo, ProjectClient } from '../../src/service/service';\r\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ProjectService {\r\n    private _current: ProjectInfo;\r\n\r\n    public get current(): ProjectInfo {\r\n        return this._current;\r\n    }\r\n\r\n    public set current(value: ProjectInfo) {\r\n        this._current = value;\r\n        var url = this.getNavUrl(value.displayString);\r\n        this.router.navigateByUrl('/' + url);\r\n    }\r\n\r\n    public projects: ProjectInfo[] = [];\r\n\r\n    constructor(private service: ProjectClient, private route: ActivatedRoute, private router: Router) {\r\n        router.events\r\n            .pipe(filter(e => e instanceof NavigationEnd))\r\n            .subscribe(p =>\r\n                console.log('title', (<NavigationEnd>p).url)\r\n            );\r\n    }\r\n\r\n    async initialize(): Promise<void> {\r\n        this.projects = await this.service.getProjects().toPromise();\r\n        this.current = this.projects[0];\r\n    }\r\n\r\n\r\n    public getNavUrl(newProject: string): string {\r\n        let root = this.router.routerState.snapshot.root;\r\n        while (root.firstChild) {\r\n            root = root.firstChild;\r\n        }\r\n\r\n        let items = root.pathFromRoot;\r\n\r\n        return items.map(p => (p.routeConfig && p.routeConfig.path == ':project') ? newProject : p.url.join('/')).filter(p => p).join('/');\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","﻿/* tslint:disable */\n/* eslint-disable */\n//----------------------\n// <auto-generated>\n//     Generated using the NSwag toolchain v12.2.0.0 (NJsonSchema v9.13.35.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)\n// </auto-generated>\n//----------------------\n// ReSharper disable InconsistentNaming\n\nimport { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\nimport { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\n\nexport const API_BASE_URL = new InjectionToken<string>('API_BASE_URL');\n\n@Injectable()\nexport class OfflineClient {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"http://localhost:5001\";\n    }\n\n    getOfflineDB(projectId: string): Observable<string | null> {\n        let url_ = this.baseUrl + \"/api/offline/db/{projectId}\";\n        if (projectId === undefined || projectId === null)\n            throw new Error(\"The parameter 'projectId' must be defined.\");\n        url_ = url_.replace(\"{projectId}\", encodeURIComponent(\"\" + projectId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetOfflineDB(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetOfflineDB(<any>response_);\n                } catch (e) {\n                    return <Observable<string | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<string | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetOfflineDB(response: HttpResponseBase): Observable<string | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 !== undefined ? resultData200 : <any>null;\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<string | null>(<any>null);\n    }\n}\n\n@Injectable()\nexport class AreaClient {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"http://localhost:5001\";\n    }\n\n    getAreaInfos(projectId: string): Observable<AreaInfo[] | null> {\n        let url_ = this.baseUrl + \"/api/area/{projectId}/infos\";\n        if (projectId === undefined || projectId === null)\n            throw new Error(\"The parameter 'projectId' must be defined.\");\n        url_ = url_.replace(\"{projectId}\", encodeURIComponent(\"\" + projectId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetAreaInfos(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetAreaInfos(<any>response_);\n                } catch (e) {\n                    return <Observable<AreaInfo[] | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<AreaInfo[] | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetAreaInfos(response: HttpResponseBase): Observable<AreaInfo[] | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200.push(AreaInfo.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<AreaInfo[] | null>(<any>null);\n    }\n}\n\n@Injectable()\nexport class CountryClient {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"http://localhost:5001\";\n    }\n\n    deleteCountry(id: string): Observable<void> {\n        let url_ = this.baseUrl + \"/api/country/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDeleteCountry(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDeleteCountry(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<void>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processDeleteCountry(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(<any>null);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(<any>null);\n    }\n\n    getCountry(id: string): Observable<CountryListItem | null> {\n        let url_ = this.baseUrl + \"/api/country/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetCountry(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetCountry(<any>response_);\n                } catch (e) {\n                    return <Observable<CountryListItem | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<CountryListItem | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetCountry(response: HttpResponseBase): Observable<CountryListItem | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? CountryListItem.fromJS(resultData200) : <any>null;\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<CountryListItem | null>(<any>null);\n    }\n\n    getCountryInfos(): Observable<CountryInfo[] | null> {\n        let url_ = this.baseUrl + \"/api/country/infos\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetCountryInfos(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetCountryInfos(<any>response_);\n                } catch (e) {\n                    return <Observable<CountryInfo[] | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<CountryInfo[] | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetCountryInfos(response: HttpResponseBase): Observable<CountryInfo[] | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200.push(CountryInfo.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<CountryInfo[] | null>(<any>null);\n    }\n\n    getCountryListItems(): Observable<CountryListItem[] | null> {\n        let url_ = this.baseUrl + \"/api/country/list\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetCountryListItems(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetCountryListItems(<any>response_);\n                } catch (e) {\n                    return <Observable<CountryListItem[] | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<CountryListItem[] | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetCountryListItems(response: HttpResponseBase): Observable<CountryListItem[] | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200.push(CountryListItem.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<CountryListItem[] | null>(<any>null);\n    }\n\n    insertCountry(item: CountryListItem): Observable<void> {\n        let url_ = this.baseUrl + \"/api/country\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processInsertCountry(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processInsertCountry(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<void>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processInsertCountry(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(<any>null);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(<any>null);\n    }\n\n    updateCountry(item: CountryListItem): Observable<void> {\n        let url_ = this.baseUrl + \"/api/country\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processUpdateCountry(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processUpdateCountry(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<void>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processUpdateCountry(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(<any>null);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(<any>null);\n    }\n}\n\n@Injectable()\nexport class EmployeeClient {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"http://localhost:5001\";\n    }\n\n    delete(id: string): Observable<void> {\n        let url_ = this.baseUrl + \"/api/employee/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDelete(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<void>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(<any>null);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(<any>null);\n    }\n\n    getEmployeeListItem(id: string): Observable<EmployeeListItem | null> {\n        let url_ = this.baseUrl + \"/api/employee/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetEmployeeListItem(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetEmployeeListItem(<any>response_);\n                } catch (e) {\n                    return <Observable<EmployeeListItem | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<EmployeeListItem | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetEmployeeListItem(response: HttpResponseBase): Observable<EmployeeListItem | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? EmployeeListItem.fromJS(resultData200) : <any>null;\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<EmployeeListItem | null>(<any>null);\n    }\n\n    getEmployeeInfos(projectId: string): Observable<EmployeeInfo[] | null> {\n        let url_ = this.baseUrl + \"/api/employee/{projectId}/all\";\n        if (projectId === undefined || projectId === null)\n            throw new Error(\"The parameter 'projectId' must be defined.\");\n        url_ = url_.replace(\"{projectId}\", encodeURIComponent(\"\" + projectId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetEmployeeInfos(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetEmployeeInfos(<any>response_);\n                } catch (e) {\n                    return <Observable<EmployeeInfo[] | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<EmployeeInfo[] | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetEmployeeInfos(response: HttpResponseBase): Observable<EmployeeInfo[] | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200.push(EmployeeInfo.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<EmployeeInfo[] | null>(<any>null);\n    }\n\n    getEmployeeListItems(projectId: string): Observable<EmployeeListItem[] | null> {\n        let url_ = this.baseUrl + \"/api/employee/{projectId}/list\";\n        if (projectId === undefined || projectId === null)\n            throw new Error(\"The parameter 'projectId' must be defined.\");\n        url_ = url_.replace(\"{projectId}\", encodeURIComponent(\"\" + projectId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetEmployeeListItems(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetEmployeeListItems(<any>response_);\n                } catch (e) {\n                    return <Observable<EmployeeListItem[] | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<EmployeeListItem[] | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetEmployeeListItems(response: HttpResponseBase): Observable<EmployeeListItem[] | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200.push(EmployeeListItem.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<EmployeeListItem[] | null>(<any>null);\n    }\n\n    insert(projectId: string, item: EmployeeListItem): Observable<void> {\n        let url_ = this.baseUrl + \"/api/employee/{projectId}\";\n        if (projectId === undefined || projectId === null)\n            throw new Error(\"The parameter 'projectId' must be defined.\");\n        url_ = url_.replace(\"{projectId}\", encodeURIComponent(\"\" + projectId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processInsert(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processInsert(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<void>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processInsert(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(<any>null);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(<any>null);\n    }\n\n    update(item: EmployeeListItem): Observable<void> {\n        let url_ = this.baseUrl + \"/api/employee\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processUpdate(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processUpdate(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<void>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processUpdate(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(<any>null);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(<any>null);\n    }\n}\n\n@Injectable()\nexport class IssueClient {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"http://localhost:5001\";\n    }\n\n    deleteIssueType(id: string): Observable<void> {\n        let url_ = this.baseUrl + \"/api/issue/type/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDeleteIssueType(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDeleteIssueType(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<void>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processDeleteIssueType(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(<any>null);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(<any>null);\n    }\n\n    getIssueCreate(projectId: string): Observable<IssueCreateData | null> {\n        let url_ = this.baseUrl + \"/api/issue/{projectId}/create\";\n        if (projectId === undefined || projectId === null)\n            throw new Error(\"The parameter 'projectId' must be defined.\");\n        url_ = url_.replace(\"{projectId}\", encodeURIComponent(\"\" + projectId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetIssueCreate(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetIssueCreate(<any>response_);\n                } catch (e) {\n                    return <Observable<IssueCreateData | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<IssueCreateData | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetIssueCreate(response: HttpResponseBase): Observable<IssueCreateData | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? IssueCreateData.fromJS(resultData200) : <any>null;\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<IssueCreateData | null>(<any>null);\n    }\n\n    getIssues(projectId: string): Observable<IssueListItem[] | null> {\n        let url_ = this.baseUrl + \"/api/issue/{projectId}/list\";\n        if (projectId === undefined || projectId === null)\n            throw new Error(\"The parameter 'projectId' must be defined.\");\n        url_ = url_.replace(\"{projectId}\", encodeURIComponent(\"\" + projectId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetIssues(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetIssues(<any>response_);\n                } catch (e) {\n                    return <Observable<IssueListItem[] | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<IssueListItem[] | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetIssues(response: HttpResponseBase): Observable<IssueListItem[] | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200.push(IssueListItem.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<IssueListItem[] | null>(<any>null);\n    }\n\n    getIssueType(id: string): Observable<IssueTypeListItem | null> {\n        let url_ = this.baseUrl + \"/api/issue/types/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetIssueType(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetIssueType(<any>response_);\n                } catch (e) {\n                    return <Observable<IssueTypeListItem | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<IssueTypeListItem | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetIssueType(response: HttpResponseBase): Observable<IssueTypeListItem | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? IssueTypeListItem.fromJS(resultData200) : <any>null;\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<IssueTypeListItem | null>(<any>null);\n    }\n\n    getIssueTypeListItems(): Observable<IssueTypeListItem[] | null> {\n        let url_ = this.baseUrl + \"/api/issue/types/list\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetIssueTypeListItems(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetIssueTypeListItems(<any>response_);\n                } catch (e) {\n                    return <Observable<IssueTypeListItem[] | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<IssueTypeListItem[] | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetIssueTypeListItems(response: HttpResponseBase): Observable<IssueTypeListItem[] | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200.push(IssueTypeListItem.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<IssueTypeListItem[] | null>(<any>null);\n    }\n\n    getIssueTypes(): Observable<IssueTypeInfo[] | null> {\n        let url_ = this.baseUrl + \"/api/issue/types\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetIssueTypes(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetIssueTypes(<any>response_);\n                } catch (e) {\n                    return <Observable<IssueTypeInfo[] | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<IssueTypeInfo[] | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetIssueTypes(response: HttpResponseBase): Observable<IssueTypeInfo[] | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200.push(IssueTypeInfo.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<IssueTypeInfo[] | null>(<any>null);\n    }\n\n    insertIssue(issue: IssueCreateItem): Observable<void> {\n        let url_ = this.baseUrl + \"/api/issue\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(issue);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processInsertIssue(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processInsertIssue(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<void>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processInsertIssue(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(<any>null);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(<any>null);\n    }\n\n    insertIssueType(issue: IssueTypeListItem): Observable<void> {\n        let url_ = this.baseUrl + \"/api/issue/type\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(issue);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processInsertIssueType(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processInsertIssueType(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<void>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processInsertIssueType(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(<any>null);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(<any>null);\n    }\n\n    updateIssueType(issue: IssueTypeListItem): Observable<void> {\n        let url_ = this.baseUrl + \"/api/issue/type\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(issue);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processUpdateIssueType(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processUpdateIssueType(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<void>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processUpdateIssueType(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(<any>null);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(<any>null);\n    }\n}\n\n@Injectable()\nexport class ProjectClient {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"http://localhost:5001\";\n    }\n\n    getProjectByName(name: string | null): Observable<ProjectInfo | null> {\n        let url_ = this.baseUrl + \"/api/project/search/{name}\";\n        if (name === undefined || name === null)\n            throw new Error(\"The parameter 'name' must be defined.\");\n        url_ = url_.replace(\"{name}\", encodeURIComponent(\"\" + name)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetProjectByName(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetProjectByName(<any>response_);\n                } catch (e) {\n                    return <Observable<ProjectInfo | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<ProjectInfo | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetProjectByName(response: HttpResponseBase): Observable<ProjectInfo | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? ProjectInfo.fromJS(resultData200) : <any>null;\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<ProjectInfo | null>(<any>null);\n    }\n\n    getProjects(): Observable<ProjectInfo[] | null> {\n        let url_ = this.baseUrl + \"/api/project/all\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetProjects(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetProjects(<any>response_);\n                } catch (e) {\n                    return <Observable<ProjectInfo[] | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<ProjectInfo[] | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetProjects(response: HttpResponseBase): Observable<ProjectInfo[] | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200.push(ProjectInfo.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<ProjectInfo[] | null>(<any>null);\n    }\n}\n\nexport class AreaInfo implements IAreaInfo {\n    areaName?: string | undefined;\n    id: string;\n\n    constructor(data?: IAreaInfo) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.areaName = data[\"areaName\"];\n            this.id = data[\"id\"];\n        }\n    }\n\n    static fromJS(data: any): AreaInfo {\n        data = typeof data === 'object' ? data : {};\n        let result = new AreaInfo();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"areaName\"] = this.areaName;\n        data[\"id\"] = this.id;\n        return data; \n    }\n}\n\nexport interface IAreaInfo {\n    areaName?: string | undefined;\n    id: string;\n}\n\nexport class CountryListItem implements ICountryListItem {\n    id: string;\n    isoTwo?: string | undefined;\n    name?: string | undefined;\n\n    constructor(data?: ICountryListItem) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.id = data[\"id\"];\n            this.isoTwo = data[\"isoTwo\"];\n            this.name = data[\"name\"];\n        }\n    }\n\n    static fromJS(data: any): CountryListItem {\n        data = typeof data === 'object' ? data : {};\n        let result = new CountryListItem();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        data[\"isoTwo\"] = this.isoTwo;\n        data[\"name\"] = this.name;\n        return data; \n    }\n}\n\nexport interface ICountryListItem {\n    id: string;\n    isoTwo?: string | undefined;\n    name?: string | undefined;\n}\n\nexport class CountryInfo implements ICountryInfo {\n    displayString?: string | undefined;\n    id: string;\n\n    constructor(data?: ICountryInfo) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.displayString = data[\"displayString\"];\n            this.id = data[\"id\"];\n        }\n    }\n\n    static fromJS(data: any): CountryInfo {\n        data = typeof data === 'object' ? data : {};\n        let result = new CountryInfo();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"displayString\"] = this.displayString;\n        data[\"id\"] = this.id;\n        return data; \n    }\n}\n\nexport interface ICountryInfo {\n    displayString?: string | undefined;\n    id: string;\n}\n\nexport class EmployeeInfo implements IEmployeeInfo {\n    displayName?: string | undefined;\n    id: string;\n\n    constructor(data?: IEmployeeInfo) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.displayName = data[\"displayName\"];\n            this.id = data[\"id\"];\n        }\n    }\n\n    static fromJS(data: any): EmployeeInfo {\n        data = typeof data === 'object' ? data : {};\n        let result = new EmployeeInfo();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"displayName\"] = this.displayName;\n        data[\"id\"] = this.id;\n        return data; \n    }\n}\n\nexport interface IEmployeeInfo {\n    displayName?: string | undefined;\n    id: string;\n}\n\nexport class EmployeeListItem implements IEmployeeListItem {\n    created: Date;\n    firstName?: string | undefined;\n    id: string;\n    isDisabled: boolean;\n    lastName?: string | undefined;\n\n    constructor(data?: IEmployeeListItem) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.created = data[\"created\"] ? new Date(data[\"created\"].toString()) : <any>undefined;\n            this.firstName = data[\"firstName\"];\n            this.id = data[\"id\"];\n            this.isDisabled = data[\"isDisabled\"];\n            this.lastName = data[\"lastName\"];\n        }\n    }\n\n    static fromJS(data: any): EmployeeListItem {\n        data = typeof data === 'object' ? data : {};\n        let result = new EmployeeListItem();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"created\"] = this.created ? this.created.toISOString() : <any>undefined;\n        data[\"firstName\"] = this.firstName;\n        data[\"id\"] = this.id;\n        data[\"isDisabled\"] = this.isDisabled;\n        data[\"lastName\"] = this.lastName;\n        return data; \n    }\n}\n\nexport interface IEmployeeListItem {\n    created: Date;\n    firstName?: string | undefined;\n    id: string;\n    isDisabled: boolean;\n    lastName?: string | undefined;\n}\n\nexport class IssueCreateData implements IIssueCreateData {\n    employees?: EmployeeInfo[] | undefined;\n    issueTypes?: IssueTypeInfo[] | undefined;\n\n    constructor(data?: IIssueCreateData) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            if (data[\"employees\"] && data[\"employees\"].constructor === Array) {\n                this.employees = [] as any;\n                for (let item of data[\"employees\"])\n                    this.employees.push(EmployeeInfo.fromJS(item));\n            }\n            if (data[\"issueTypes\"] && data[\"issueTypes\"].constructor === Array) {\n                this.issueTypes = [] as any;\n                for (let item of data[\"issueTypes\"])\n                    this.issueTypes.push(IssueTypeInfo.fromJS(item));\n            }\n        }\n    }\n\n    static fromJS(data: any): IssueCreateData {\n        data = typeof data === 'object' ? data : {};\n        let result = new IssueCreateData();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        if (this.employees && this.employees.constructor === Array) {\n            data[\"employees\"] = [];\n            for (let item of this.employees)\n                data[\"employees\"].push(item.toJSON());\n        }\n        if (this.issueTypes && this.issueTypes.constructor === Array) {\n            data[\"issueTypes\"] = [];\n            for (let item of this.issueTypes)\n                data[\"issueTypes\"].push(item.toJSON());\n        }\n        return data; \n    }\n}\n\nexport interface IIssueCreateData {\n    employees?: EmployeeInfo[] | undefined;\n    issueTypes?: IssueTypeInfo[] | undefined;\n}\n\nexport class IssueTypeInfo implements IIssueTypeInfo {\n    displayString?: string | undefined;\n    id: string;\n\n    constructor(data?: IIssueTypeInfo) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.displayString = data[\"displayString\"];\n            this.id = data[\"id\"];\n        }\n    }\n\n    static fromJS(data: any): IssueTypeInfo {\n        data = typeof data === 'object' ? data : {};\n        let result = new IssueTypeInfo();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"displayString\"] = this.displayString;\n        data[\"id\"] = this.id;\n        return data; \n    }\n}\n\nexport interface IIssueTypeInfo {\n    displayString?: string | undefined;\n    id: string;\n}\n\nexport class IssueListItem implements IIssueListItem {\n    assignedTo?: string | undefined;\n    createTime: Date;\n    description?: string | undefined;\n    id: string;\n    issueType?: string | undefined;\n    title?: string | undefined;\n\n    constructor(data?: IIssueListItem) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.assignedTo = data[\"assignedTo\"];\n            this.createTime = data[\"createTime\"] ? new Date(data[\"createTime\"].toString()) : <any>undefined;\n            this.description = data[\"description\"];\n            this.id = data[\"id\"];\n            this.issueType = data[\"issueType\"];\n            this.title = data[\"title\"];\n        }\n    }\n\n    static fromJS(data: any): IssueListItem {\n        data = typeof data === 'object' ? data : {};\n        let result = new IssueListItem();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"assignedTo\"] = this.assignedTo;\n        data[\"createTime\"] = this.createTime ? this.createTime.toISOString() : <any>undefined;\n        data[\"description\"] = this.description;\n        data[\"id\"] = this.id;\n        data[\"issueType\"] = this.issueType;\n        data[\"title\"] = this.title;\n        return data; \n    }\n}\n\nexport interface IIssueListItem {\n    assignedTo?: string | undefined;\n    createTime: Date;\n    description?: string | undefined;\n    id: string;\n    issueType?: string | undefined;\n    title?: string | undefined;\n}\n\nexport class IssueTypeListItem implements IIssueTypeListItem {\n    description?: string | undefined;\n    id: string;\n    title?: string | undefined;\n\n    constructor(data?: IIssueTypeListItem) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.description = data[\"description\"];\n            this.id = data[\"id\"];\n            this.title = data[\"title\"];\n        }\n    }\n\n    static fromJS(data: any): IssueTypeListItem {\n        data = typeof data === 'object' ? data : {};\n        let result = new IssueTypeListItem();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"description\"] = this.description;\n        data[\"id\"] = this.id;\n        data[\"title\"] = this.title;\n        return data; \n    }\n}\n\nexport interface IIssueTypeListItem {\n    description?: string | undefined;\n    id: string;\n    title?: string | undefined;\n}\n\nexport class IssueCreateItem implements IIssueCreateItem {\n    areaId: string;\n    assignedToId?: string | undefined;\n    attachments?: string[] | undefined;\n    creationTime: Date;\n    descripton?: string | undefined;\n    issueTypeId: string;\n    title?: string | undefined;\n\n    constructor(data?: IIssueCreateItem) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.areaId = data[\"areaId\"];\n            this.assignedToId = data[\"assignedToId\"];\n            if (data[\"attachments\"] && data[\"attachments\"].constructor === Array) {\n                this.attachments = [] as any;\n                for (let item of data[\"attachments\"])\n                    this.attachments.push(item);\n            }\n            this.creationTime = data[\"creationTime\"] ? new Date(data[\"creationTime\"].toString()) : <any>undefined;\n            this.descripton = data[\"descripton\"];\n            this.issueTypeId = data[\"issueTypeId\"];\n            this.title = data[\"title\"];\n        }\n    }\n\n    static fromJS(data: any): IssueCreateItem {\n        data = typeof data === 'object' ? data : {};\n        let result = new IssueCreateItem();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"areaId\"] = this.areaId;\n        data[\"assignedToId\"] = this.assignedToId;\n        if (this.attachments && this.attachments.constructor === Array) {\n            data[\"attachments\"] = [];\n            for (let item of this.attachments)\n                data[\"attachments\"].push(item);\n        }\n        data[\"creationTime\"] = this.creationTime ? this.creationTime.toISOString() : <any>undefined;\n        data[\"descripton\"] = this.descripton;\n        data[\"issueTypeId\"] = this.issueTypeId;\n        data[\"title\"] = this.title;\n        return data; \n    }\n}\n\nexport interface IIssueCreateItem {\n    areaId: string;\n    assignedToId?: string | undefined;\n    attachments?: string[] | undefined;\n    creationTime: Date;\n    descripton?: string | undefined;\n    issueTypeId: string;\n    title?: string | undefined;\n}\n\nexport class ProjectInfo implements IProjectInfo {\n    displayString?: string | undefined;\n    id: string;\n\n    constructor(data?: IProjectInfo) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.displayString = data[\"displayString\"];\n            this.id = data[\"id\"];\n        }\n    }\n\n    static fromJS(data: any): ProjectInfo {\n        data = typeof data === 'object' ? data : {};\n        let result = new ProjectInfo();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"displayString\"] = this.displayString;\n        data[\"id\"] = this.id;\n        return data; \n    }\n}\n\nexport interface IProjectInfo {\n    displayString?: string | undefined;\n    id: string;\n}\n\nexport class SwaggerException extends Error {\n    message: string;\n    status: number; \n    response: string; \n    headers: { [key: string]: any; };\n    result: any; \n\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\n        super();\n\n        this.message = message;\n        this.status = status;\n        this.response = response;\n        this.headers = headers;\n        this.result = result;\n    }\n\n    protected isSwaggerException = true;\n\n    static isSwaggerException(obj: any): obj is SwaggerException {\n        return obj.isSwaggerException === true;\n    }\n}\n\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable<any> {\n    if(result !== null && result !== undefined)\n        return _observableThrow(result);\n    else\n        return _observableThrow(new SwaggerException(message, status, response, headers, null));\n}\n\nfunction blobToText(blob: any): Observable<string> {\n    return new Observable<string>((observer: any) => {\n        if (!blob) {\n            observer.next(\"\");\n            observer.complete();\n        } else {\n            let reader = new FileReader(); \n            reader.onload = event => { \n                observer.next((<any>event.target).result);\n                observer.complete();\n            };\n            reader.readAsText(blob); \n        }\n    });\n}"],"sourceRoot":""}