{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/countries/countries-list.component.html","./src/app/countries/countries-list.component.ts","./src/app/countries/country-create.component.ts","./src/app/countries/country-edit.component.html","./src/app/countries/country-edit.component.ts","./src/app/dashboard/dasbhoard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/employees/employee-create.component.ts","./src/app/employees/employee-edit.component.html","./src/app/employees/employee-edit.component.ts","./src/app/employees/employees-list.component.ts","./src/app/employees/employees-list.component.html","./src/app/issue-types/issue-type-create.component.ts","./src/app/issue-types/issue-type-edit.component.html","./src/app/issue-types/issue-type-edit.component.ts","./src/app/issue-types/issue-types-list.component.html","./src/app/issue-types/issue-types-list.component.ts","./src/app/issues/issue-list.component.ts","./src/app/issues/issue-list.component.html","./src/app/project-id.resolver.ts","./src/app/project.service.ts","./src/environments/environment.ts","./src/main.ts","./src/service/service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dasbhoard.component';\r\nimport { CountriesListComponent } from './countries/countries-list.component';\r\nimport { CountryEditComponent } from './countries/country-edit.component';\r\nimport { CountryCreateComponent } from './countries/country-create.component';\r\nimport { ProjectIdResolver } from './project-id.resolver';\r\nimport { IssueListComponent } from './issues/issue-list.component';\r\nimport { IssueTypesListComponent } from './issue-types/issue-types-list.component';\r\nimport { IssueTypeEditComponent } from './issue-types/issue-type-edit.component';\r\nimport { IssueTypeCreateComponent } from './issue-types/issue-type-create.component';\r\nimport { EmployeesListComponent } from './employees/employees-list.component';\r\nimport { EmployeeEditComponent } from './employees/employee-edit.component';\r\nimport { EmployeeCreateComponent } from './employees/employee-create.component';\r\n\r\nconst routes: Routes = [{\r\n  path: 'dashboard',\r\n  component: DashboardComponent\r\n},\r\n{\r\n  path: 'countries',\r\n  children: [\r\n    {\r\n      path: '',\r\n      component: CountriesListComponent\r\n    },\r\n    {\r\n      path: 'new',\r\n      component: CountryCreateComponent\r\n    },\r\n    {\r\n      path: ':id',\r\n      component: CountryEditComponent\r\n    },\r\n\r\n  ]\r\n},\r\n{\r\n  path: 'issuetypes',\r\n  children: [\r\n    {\r\n      path: '',\r\n      component: IssueTypesListComponent\r\n    },\r\n    {\r\n      path: 'new',\r\n      component: IssueTypeCreateComponent\r\n    },\r\n    {\r\n      path: ':id',\r\n      component: IssueTypeEditComponent\r\n    }\r\n  ]\r\n},\r\n{\r\n  path: ':project',\r\n  resolve: {\r\n    project: ProjectIdResolver\r\n  },\r\n  children: [\r\n    {\r\n      path: 'issues',\r\n      children: [\r\n        {\r\n          path: '',\r\n          component: IssueListComponent\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      path: 'employees',\r\n      children: [\r\n        {\r\n          path: '',\r\n          component: EmployeesListComponent\r\n        },\r\n        {\r\n          path: 'new',\r\n          component: EmployeeCreateComponent\r\n        },\r\n        {\r\n          path: ':id',\r\n          component: EmployeeEditComponent\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n},\r\n\r\n{\r\n  path: '**',\r\n  redirectTo: 'dashboard'\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <a class=\"navbar-brand\" href=\"#\">Construction Diary</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" (click)=\"isCollapsed = !isCollapsed\"\r\n        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div class=\"collapse navbar-collapse\" [collapse]=\"isCollapsed\" id=\"navbarSupportedContent\">\r\n        <ul class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item active\">\r\n                <a class=\"nav-link\" [routerLink]=\"['dashboard']\" routerLinkActive=\"active\">Dashboard</a>\r\n            </li>\r\n            <li class=\"nav-item active\" *ngIf=\"projectService.current\">\r\n                <a class=\"nav-link\" [routerLink]=\"[projectService.current.displayString,'issues']\"\r\n                    routerLinkActive=\"active\">Issues</a>\r\n            </li>\r\n            <li class=\"nav-item dropdown\" dropdown>\r\n                <div dropdownToggle class=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\"\r\n                    data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    Masterdata\r\n                </div>\r\n                <div *dropdownMenu class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                    <a class=\"dropdown-item\" [routerLink]=\"['countries']\" routerLinkActive=\"active\">Countries</a>\r\n                    <a class=\"dropdown-item\" [routerLink]=\"['issuetypes']\" routerLinkActive=\"active\">Issue types</a>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <a *ngIf=\"projectService.current\" class=\"dropdown-item\"\r\n                        [routerLink]=\"[projectService.current.displayString,'employees']\"\r\n                        routerLinkActive=\"active\">Employees</a>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n\r\n        <form class=\"form-inline my-2 my-lg-0\">\r\n            <select class=\"form-control\" #p (change)=\"selectProject(p.value)\">\r\n                <option *ngFor=\"let item of projectService.projects\"\r\n                    [attr.selected]=\"projectService.current && projectService.current.id == item.id ? 'selected' : null\"\r\n                    [value]=\"item.id\">{{item.displayString}}</option>\r\n            </select>\r\n        </form>\r\n    </div>\r\n\r\n</nav>\r\n\r\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\nimport { ProjectService } from './project.service';\r\nimport { ProjectInfo } from 'src/service/service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styles: []\r\n})\r\nexport class AppComponent implements OnInit {\r\n  async ngOnInit(): Promise<void> {\r\n    await this.projectService.initialize();\r\n  }\r\n\r\n  public isCollapsed: boolean = true;\r\n\r\n  public selectProject(projectid: string) {\r\n    this.projectService.current = this.projectService.projects.filter(p => p.id == projectid)[0];\r\n  }\r\n\r\n  constructor(public projectService: ProjectService) {\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination'\r\nimport { AccordionModule } from 'ngx-bootstrap/accordion'\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\r\nimport { DashboardComponent } from './dashboard/dasbhoard.component';\r\nimport { CountriesListComponent } from './countries/countries-list.component';\r\nimport { CountryServiceClient, ProjectServiceClient, IssueServiceClient, IssueTypeListItem, EmployeeServiceClient } from '../service/service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CountryEditComponent } from './countries/country-edit.component';\r\nimport { CountryCreateComponent } from './countries/country-create.component';\r\nimport { ProjectService } from './project.service';\r\nimport { ProjectIdResolver } from './project-id.resolver';\r\nimport { IssueListComponent } from './issues/issue-list.component';\r\nimport { IssueTypeCreateComponent } from './issue-types/issue-type-create.component';\r\nimport { IssueTypeEditComponent } from './issue-types/issue-type-edit.component';\r\nimport { IssueTypesListComponent } from './issue-types/issue-types-list.component';\r\nimport { EmployeeCreateComponent } from './employees/employee-create.component';\r\nimport { EmployeeEditComponent } from './employees/employee-edit.component';\r\nimport { EmployeesListComponent } from './employees/employees-list.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    CountriesListComponent,\r\n    CountryEditComponent,\r\n    CountryCreateComponent,\r\n    IssueListComponent,\r\n    IssueTypeCreateComponent,\r\n    IssueTypeEditComponent,\r\n    IssueTypesListComponent,\r\n    EmployeeCreateComponent,\r\n    EmployeeEditComponent,\r\n    EmployeesListComponent\r\n  ],\r\n  imports: [\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AccordionModule.forRoot(),\r\n    BsDropdownModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    CollapseModule.forRoot()\r\n  ],\r\n  providers: [\r\n    CountryServiceClient,\r\n    ProjectServiceClient,\r\n    IssueServiceClient,\r\n    EmployeeServiceClient,\r\n    ProjectService,\r\n    ProjectIdResolver\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<h1>Country List</h1>\r\n<a  class=\"btn btn-primary\" [routerLink]=\"['new']\">new item</a>\r\n\r\n<div class=\"table-responsive\" *ngIf=\"items\">\r\n    <table class=\"table table-striped table-hover\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">Iso</th>\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let item of items\" (click)=\"select(item)\" [class.table-primary]=\"item == selectedItem\">\r\n                <td>{{item.isoTwo}}</td>\r\n                <td>{{item.name}}</td>\r\n                <td>\r\n                    <a class=\"btn btn-primary\" [routerLink]=\"[item.id]\" role=\"button\">edit</a>\r\n                    &nbsp;\r\n                    <button class=\"btn btn-primary\" (click)=\"delete(item)\" role=\"button\">delete</button>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { CountryServiceClient, CountryListItem } from '../../service/service';\r\n\r\n@Component({\r\n    selector: 'countries-list',\r\n    templateUrl: './countries-list.component.html'\r\n})\r\nexport class CountriesListComponent implements OnInit {\r\n    public items: CountryListItem[] = [];\r\n\r\n    public selectedItem?: CountryListItem;\r\n\r\n    async ngOnInit(): Promise<void> {\r\n        const data = await this.service.getCountryListItems().toPromise();\r\n        if (data) {\r\n            this.items = data;\r\n        }\r\n    }\r\n\r\n    constructor(private service: CountryServiceClient) {\r\n    }\r\n\r\n    public select(item: CountryListItem) {\r\n        this.selectedItem = item;\r\n    }\r\n\r\n    public async delete(item: CountryListItem): Promise<void> {\r\n        if(item.id)\r\n        {\r\n            await this.service.deleteCountry(item.id).toPromise();\r\n            await this.ngOnInit();\r\n        }\r\n    }\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { CountryServiceClient, CountryListItem } from '../../service/service';\r\nimport { ActivatedRouteSnapshot, ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'country-create',\r\n    templateUrl: './country-edit.component.html'\r\n})\r\nexport class CountryCreateComponent {\r\n    public item: CountryListItem;\r\n\r\n    constructor(private service: CountryServiceClient, private route: ActivatedRoute, private router: Router) {\r\n        this.item = new CountryListItem();\r\n    }\r\n\r\n    public async save(): Promise<void> {\r\n        await this.service.insertCountry(this.item).toPromise();\r\n        const url = this.getNavUrl(this.route);\r\n        await this.router.navigateByUrl(url);\r\n        \r\n    }\r\n\r\n    public getNavUrl(route: ActivatedRoute): string {\r\n        if (route.parent) {\r\n            var items = route.parent.snapshot.pathFromRoot;\r\n            return items.map(p => p.url.join('/')).join('/');\r\n        }\r\n\r\n        return \"\";\r\n    }\r\n}","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col align-self-center\">\r\n            <form *ngIf=\"item\">\r\n                <div class=\"form-group\">\r\n                    <label>Iso</label>\r\n                    <input type=\"text\" class=\"form-control\" [required]=\"true\" [maxlength]=\"2\" placeholder=\"Iso code\" [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"item.isoTwo\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Country name\" [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"item.name\" />\r\n                </div>\r\n\r\n                <button type=\"submit\" class=\"btn btn-primary\" (click)=\"save()\">Submit</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { CountryServiceClient, CountryListItem } from '../../service/service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'country-edit',\r\n    templateUrl: './country-edit.component.html'\r\n})\r\nexport class CountryEditComponent implements OnInit {\r\n    public item?: CountryListItem;\r\n\r\n    async ngOnInit(): Promise<void> {\r\n        var id = this.route.snapshot.params['id']\r\n\r\n        const data = await this.service.getCountry(id).toPromise();\r\n        if (data) {\r\n            this.item = data;\r\n        }\r\n    }\r\n\r\n    constructor(private service: CountryServiceClient, private route: ActivatedRoute, private router: Router) {\r\n    }\r\n\r\n    public async save(): Promise<void> {\r\n        if (this.item) {\r\n            await this.service.updateCountry(this.item).toPromise();\r\n            const url = this.getNavUrl(this.route);\r\n            await this.router.navigateByUrl(url);\r\n        }\r\n    }\r\n\r\n    public getNavUrl(route: ActivatedRoute): string {\r\n        if (route.parent) {\r\n            var items = route.parent.snapshot.pathFromRoot;\r\n\r\n            return items.map(p => p.url.join('/')).join('/');\r\n        }\r\n        return \"\";\r\n    }\r\n}","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: 'dashboard',\r\n    templateUrl: './dashboard.component.html'\r\n})\r\nexport class DashboardComponent{\r\n\r\n}","<h1>Dashboard</h1>","import { Component, OnInit } from \"@angular/core\";\r\nimport { IssueTypeInfo, IssueServiceClient, IssueTypeListItem, EmployeeServiceClient, EmployeeListItem, ProjectInfo } from '../../service/service';\r\nimport { ActivatedRouteSnapshot, ActivatedRoute, Router } from '@angular/router';\r\nimport { ProjectService } from '../project.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'employee-create',\r\n    templateUrl: './employee-edit.component.html'\r\n})\r\nexport class EmployeeCreateComponent {\r\n    public item: EmployeeListItem;\r\n    private project?: ProjectInfo;\r\n\r\n    constructor(private service: EmployeeServiceClient, private route: ActivatedRoute, private router: Router) {\r\n        this.item = new EmployeeListItem();\r\n\r\n        route.data.pipe(map(p => <ProjectInfo>p['project'] ?? null))\r\n            .subscribe(p => { this.project = p; });\r\n    }\r\n\r\n    public async save(): Promise<void> {\r\n        if (this.project?.id) {\r\n            await this.service.insert(this.project.id, this.item).toPromise();\r\n            const url = this.getNavUrl(this.route);\r\n            await this.router.navigateByUrl(url);\r\n        }\r\n    }\r\n\r\n    public getNavUrl(route: ActivatedRoute): string {\r\n        if (route.parent) {\r\n            var items = route.parent.snapshot.pathFromRoot;\r\n\r\n            return items.map(p => p.url.join('/')).join('/');\r\n        }\r\n        return \"\";\r\n    }\r\n}","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col align-self-center\">\r\n            <h1>Employee</h1>\r\n            <form *ngIf=\"item\">\r\n                <div class=\"form-group\">\r\n                    <label>Firstname</label>\r\n                    <input type=\"text\" class=\"form-control\" required placeholder=\"Firstname\"\r\n                        [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"item.firstName\" />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Lastname</label>\r\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Lastname\"\r\n                        [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"item.lastName\" />\r\n                </div>\r\n\r\n                <button type=\"submit\" class=\"btn btn-primary\" (click)=\"save()\">Submit</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { IssueTypeInfo, IssueServiceClient, IssueTypeListItem, EmployeeServiceClient, EmployeeListItem, ProjectInfo } from '../../service/service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'employee-edit',\r\n    templateUrl: './employee-edit.component.html'\r\n})\r\nexport class EmployeeEditComponent {\r\n    public item?: EmployeeListItem;\r\n    private project?: ProjectInfo;\r\n\r\n    async loadData(): Promise<void> {\r\n        var id = this.route.snapshot.params['id']\r\n\r\n        const data = await this.service.getEmployeeListItem(id).toPromise();\r\n        if (data) {\r\n            this.item = data;\r\n        }\r\n    }\r\n\r\n    constructor(private service: EmployeeServiceClient, private route: ActivatedRoute, private router: Router) {\r\n        route.data.pipe(map(p => <ProjectInfo>p['project']))\r\n            .subscribe(p => { this.project = p; this.loadData(); });\r\n    }\r\n\r\n    public async save(): Promise<void> {\r\n        if (this.item) {\r\n            await this.service.update(this.item).toPromise();\r\n            const url = this.getNavUrl(this.route);\r\n            await this.router.navigateByUrl(url);\r\n        }\r\n    }\r\n\r\n    public getNavUrl(route: ActivatedRoute): string {\r\n        if (route.parent) {\r\n            var items = route.parent.snapshot.pathFromRoot;\r\n\r\n            return items.map(p => p.url.join('/')).join('/');\r\n        }\r\n\r\n        return \"\";\r\n    }\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { IssueTypeInfo, IssueServiceClient, IssueTypeListItem, EmployeeListItem, EmployeeServiceClient, ProjectInfo } from '../../service/service';\r\nimport { ProjectService } from '../project.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\nimport { ProjectIdResolver } from '../project-id.resolver';\r\n\r\n@Component({\r\n    selector: 'employees-list',\r\n    templateUrl: './employees-list.component.html'\r\n})\r\nexport class EmployeesListComponent {\r\n    public items: EmployeeListItem[] = [];\r\n    private project?: ProjectInfo;\r\n\r\n    public selectedItem?: EmployeeListItem;\r\n\r\n    async loadData(): Promise<void> {\r\n        if (this.project?.id) {\r\n            const data = await this.service.getEmployeeListItems(this.project.id).toPromise();\r\n            if (data) {\r\n                this.items = data;\r\n            }\r\n        }\r\n    }\r\n\r\n    constructor(private service: EmployeeServiceClient, currentRoute: ActivatedRoute) {\r\n        currentRoute.data.pipe(map(p => <ProjectInfo>p['project']))\r\n            .subscribe(p => { this.project = p; this.loadData(); });\r\n    }\r\n\r\n    public select(item: EmployeeListItem) {\r\n        this.selectedItem = item;\r\n    }\r\n\r\n    public async delete(item: IssueTypeListItem): Promise<void> {\r\n        if(item.id){\r\n            await this.service.delete(item.id).toPromise();\r\n            await this.loadData();\r\n        }\r\n    }\r\n}","<h1>Employee List</h1>\r\n<a class=\"btn btn-primary\" [routerLink]=\"['new']\">new item</a>\r\n\r\n<div class=\"table-responsive\" *ngIf=\"items\">\r\n    <table class=\"table table-striped table-hover\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">Firstname</th>\r\n                <th scope=\"col\">Lastname</th>\r\n                <th scope=\"col\">Created</th>\r\n                <th scope=\"col\">Disabled</th>\r\n                <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let item of items\" (click)=\"select(item)\" [class.table-primary]=\"item == selectedItem\">\r\n                <td>{{item.firstName}}</td>\r\n                <td>{{item.lastName}}</td>\r\n                <td>{{item.created}}</td>\r\n                <td>{{item.isDisabled}}</td>\r\n                <td>\r\n                    <a class=\"btn btn-primary\" [routerLink]=\"[item.id]\" role=\"button\">edit</a>\r\n                    &nbsp;\r\n                    <button class=\"btn btn-primary\" (click)=\"delete(item)\" role=\"button\">delete</button>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { IssueTypeInfo, IssueServiceClient, IssueTypeListItem } from '../../service/service';\r\nimport { ActivatedRouteSnapshot, ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'issue-type-create',\r\n    templateUrl: './issue-type-edit.component.html'\r\n})\r\nexport class IssueTypeCreateComponent {\r\n    public item: IssueTypeListItem;\r\n\r\n    constructor(private service: IssueServiceClient, private route: ActivatedRoute, private router: Router) {\r\n        this.item = new IssueTypeListItem();\r\n    }\r\n\r\n    public async save(): Promise<void> {\r\n        await this.service.insertIssueType(this.item).toPromise();\r\n        const url = this.getNavUrl(this.route);\r\n        await this.router.navigateByUrl(url);\r\n    }\r\n\r\n    public getNavUrl(route: ActivatedRoute): string {\r\n        if (route.parent) {\r\n            var items = route.parent.snapshot.pathFromRoot;\r\n\r\n            return items.map(p => p.url.join('/')).join('/');\r\n        }\r\n        return \"\";\r\n    }\r\n}","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col align-self-center\">\r\n            <h1>Issue Type</h1>\r\n            <form *ngIf=\"item\">\r\n                <div class=\"form-group\">\r\n                    <label>Title</label>\r\n                    <input type=\"text\" class=\"form-control\" required placeholder=\"Title\"\r\n                        [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"item.title\" />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Description</label>\r\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Description\"\r\n                        [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"item.description\" />\r\n                </div>\r\n\r\n                <button type=\"submit\" class=\"btn btn-primary\" (click)=\"save()\">Submit</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { IssueTypeInfo, IssueServiceClient, IssueTypeListItem } from '../../service/service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'country-edit',\r\n    templateUrl: './issue-type-edit.component.html'\r\n})\r\nexport class IssueTypeEditComponent implements OnInit {\r\n    public item?: IssueTypeListItem;\r\n\r\n    async ngOnInit(): Promise<void> {\r\n        var id = this.route.snapshot.params['id']\r\n\r\n        const data = await this.service.getIssueType(id).toPromise();\r\n        if (data) {\r\n            this.item = data;\r\n        }\r\n    }\r\n\r\n    constructor(private service: IssueServiceClient, private route: ActivatedRoute, private router: Router) {\r\n    }\r\n\r\n    public async save(): Promise<void> {\r\n        if (this.item) {\r\n            await this.service.updateIssueType(this.item).toPromise();\r\n            const url = this.getNavUrl(this.route);\r\n            await this.router.navigateByUrl(url);\r\n        }\r\n    }\r\n\r\n    public getNavUrl(route: ActivatedRoute): string {\r\n        if (route.parent) {\r\n            var items = route.parent.snapshot.pathFromRoot;\r\n\r\n            return items.map(p => p.url.join('/')).join('/');\r\n        }\r\n        return \"\";\r\n    }\r\n}","<h1>Issue Type List</h1>\r\n<a  class=\"btn btn-primary\" [routerLink]=\"['new']\">new item</a>\r\n\r\n<div class=\"table-responsive\" *ngIf=\"items\">\r\n    <table class=\"table table-striped table-hover\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">Title</th>\r\n                <th scope=\"col\">Description</th>\r\n                <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let item of items\" (click)=\"select(item)\" [class.table-primary]=\"item == selectedItem\">\r\n                <td>{{item.title}}</td>\r\n                <td>{{item.description}}</td>\r\n                <td>\r\n                    <a class=\"btn btn-primary\" [routerLink]=\"[item.id]\" role=\"button\">edit</a>\r\n                    &nbsp;\r\n                    <button class=\"btn btn-primary\" (click)=\"delete(item)\" role=\"button\">delete</button>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { IssueTypeInfo, IssueServiceClient, IssueTypeListItem } from '../../service/service';\r\n\r\n@Component({\r\n    selector: 'issue-types-list',\r\n    templateUrl: './issue-types-list.component.html'\r\n})\r\nexport class IssueTypesListComponent implements OnInit {\r\n    public items: IssueTypeListItem[] = [];\r\n\r\n    public selectedItem?: IssueTypeListItem;\r\n\r\n    async ngOnInit(): Promise<void> {\r\n        const data = await this.service.getIssueTypeListItems().toPromise();\r\n        if (data) {\r\n            this.items = data;\r\n        }\r\n    }\r\n\r\n    constructor(private service: IssueServiceClient) {\r\n    }\r\n\r\n    public select(item: IssueTypeListItem) {\r\n        this.selectedItem = item;\r\n    }\r\n\r\n    public async delete(item: IssueTypeListItem): Promise<void> {\r\n        if(item.id){\r\n        await this.service.deleteIssueType(item.id).toPromise();\r\n        await this.ngOnInit();\r\n    }\r\n    }\r\n}","import { Component, OnInit, Provider } from \"@angular/core\";\r\nimport { PageChangedEvent } from \"ngx-bootstrap/pagination\";\r\nimport { IssueServiceClient, ProjectInfo, IssueListItem } from '../../../src/service/service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'issue-list',\r\n    templateUrl: './issue-list.component.html'\r\n})\r\nexport class IssueListComponent {\r\n    public items: IssueListItem[] = [];\r\n\r\n    public totalCount: number = 0;\r\n\r\n    public currentPage : number = 0;\r\n\r\n    public selectedItem?: IssueListItem;\r\n    \r\n    private project?: ProjectInfo;\r\n\r\n    constructor(private service: IssueServiceClient, private currentRoute: ActivatedRoute) {\r\n        currentRoute.data.pipe(map(p => <ProjectInfo>p['project']))\r\n            .subscribe(async p => {\r\n                this.project = p; \r\n                this.totalCount = 0; \r\n                await this.loadData();\r\n            });\r\n    }\r\n\r\n    public select(item: ProjectInfo) : void{\r\n        this.selectedItem = item;\r\n    }\r\n\r\n    public pageChanged(event: PageChangedEvent) : void{\r\n        this.currentPage = event.page;\r\n        this.loadData()\r\n    }\r\n\r\n    private async loadData(): Promise<void> {\r\n        if(this.project?.id){\r\n            let data = await this.service.getIssues(this.project.id,this.currentPage * 10, 10, this.totalCount == 0 ? undefined: this.totalCount).toPromise();\r\n\r\n            if (data.items) {\r\n                this.items = data.items;\r\n            } else {\r\n                this.items = [];\r\n            }\r\n            if(data.totalCount){\r\n                this.totalCount = data.totalCount;\r\n            }\r\n        }\r\n    }\r\n}","<h1>Issues List</h1>\r\n<div class=\"table-responsive\" *ngIf=\"items\">\r\n    <table class=\"table table-striped table-hover\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">Title</th>\r\n                <th scope=\"col\">Description</th>\r\n                <th scope=\"col\">IssueType</th>\r\n                <th scope=\"col\">Assigned To</th>\r\n                <th scope=\"col\">Creation Time</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let item of items\" (click)=\"select(item)\" [class.table-primary]=\"item == selectedItem\">\r\n                <td>{{item.title}}</td>\r\n                <td>{{item.description}}</td>\r\n                <td>{{item.issueType}}</td>\r\n                <td>{{item.assignedTo}}</td>\r\n                <td>{{item.createTime}}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <pagination [totalItems]=\"totalCount\"\r\n        [maxSize]=\"8\"\r\n         [itemsPerPage]=\"10\"\r\n         (pageChanged)=\"pageChanged($event)\"></pagination>\r\n</div>","import { ResolveData, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { ProjectInfo, ProjectServiceClient } from '../../src/service/service';\r\nimport { ProjectService } from './project.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ProjectIdResolver implements Resolve<ProjectInfo>{\r\n\r\n    constructor(private service: ProjectServiceClient, private projectService: ProjectService) {\r\n\r\n    }\r\n\r\n    async resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<ProjectInfo> {\r\n        let projectName = route.params['project'];\r\n\r\n        var project = await this.service.getProjectByName(projectName).toPromise();\r\n\r\n        if (this.projectService.current && this.projectService.current.id != project.id) {\r\n            this.projectService.current = project;\r\n        }\r\n\r\n        return project;\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { ProjectInfo, ProjectServiceClient } from '../../src/service/service';\r\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ProjectService {\r\n    private _current?: ProjectInfo;\r\n\r\n    public get current(): ProjectInfo | undefined {\r\n        return this._current;\r\n    }\r\n\r\n    public set current(value: ProjectInfo | undefined) {\r\n        this._current = value;\r\n        if (value?.displayString) {\r\n            var url = this.getNavUrl(value.displayString);\r\n            this.router.navigateByUrl('/' + url);\r\n        }\r\n    }\r\n\r\n    public projects: ProjectInfo[] = [];\r\n\r\n    constructor(private service: ProjectServiceClient, private route: ActivatedRoute, private router: Router) {\r\n        router.events\r\n            .pipe(filter(e => e instanceof NavigationEnd))\r\n            .subscribe(p =>\r\n                console.log('title', (<NavigationEnd>p).url)\r\n            );\r\n    }\r\n\r\n    async initialize(): Promise<void> {\r\n        this.projects = await this.service.getProjects().toPromise();\r\n        this.current = this.projects[0];\r\n    }\r\n\r\n\r\n    public getNavUrl(newProject: string): string {\r\n        let root = this.router.routerState.snapshot.root;\r\n        while (root.firstChild) {\r\n            root = root.firstChild;\r\n        }\r\n\r\n        let items = root.pathFromRoot;\r\n\r\n        return items.map(p => (p.routeConfig && p.routeConfig.path == ':project') ? newProject : p.url.join('/')).filter(p => p).join('/');\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* tslint:disable */\r\n/* eslint-disable */\r\n//----------------------\r\n// <auto-generated>\r\n//     Generated using the NSwag toolchain v13.15.9.0 (NJsonSchema v10.6.8.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)\r\n// </auto-generated>\r\n//----------------------\r\n// ReSharper disable InconsistentNaming\r\n// @ts-nocheck\r\n\r\nimport { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\r\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\r\nimport { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\r\n\r\nexport const API_BASE_URL = new InjectionToken<string>('API_BASE_URL');\r\n\r\n@Injectable()\r\nexport class OfflineServiceClient {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"http://localhost:5001\";\r\n    }\r\n\r\n    getOfflineDB(projectId: string): Observable<string> {\r\n        let url_ = this.baseUrl + \"/api/offline/db/{projectId}\";\r\n        if (projectId === undefined || projectId === null)\r\n            throw new Error(\"The parameter 'projectId' must be defined.\");\r\n        url_ = url_.replace(\"{projectId}\", encodeURIComponent(\"\" + projectId));\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetOfflineDB(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetOfflineDB(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<string>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<string>;\r\n        }));\r\n    }\r\n\r\n    protected processGetOfflineDB(response: HttpResponseBase): Observable<string> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n                result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n    \r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<string>(null as any);\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class AreaServiceClient {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"http://localhost:5001\";\r\n    }\r\n\r\n    getAreaInfos(projectId: string): Observable<AreaInfo[]> {\r\n        let url_ = this.baseUrl + \"/api/area/{projectId}/infos\";\r\n        if (projectId === undefined || projectId === null)\r\n            throw new Error(\"The parameter 'projectId' must be defined.\");\r\n        url_ = url_.replace(\"{projectId}\", encodeURIComponent(\"\" + projectId));\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetAreaInfos(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetAreaInfos(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<AreaInfo[]>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<AreaInfo[]>;\r\n        }));\r\n    }\r\n\r\n    protected processGetAreaInfos(response: HttpResponseBase): Observable<AreaInfo[]> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(AreaInfo.fromJS(item));\r\n            }\r\n            else {\r\n                result200 = <any>null;\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<AreaInfo[]>(null as any);\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class CountryServiceClient {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"http://localhost:5001\";\r\n    }\r\n\r\n    deleteCountry(id: string): Observable<void> {\r\n        let url_ = this.baseUrl + \"/api/country/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processDeleteCountry(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processDeleteCountry(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<void>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<void>;\r\n        }));\r\n    }\r\n\r\n    protected processDeleteCountry(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(null as any);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(null as any);\r\n    }\r\n\r\n    getCountry(id: string): Observable<CountryListItem> {\r\n        let url_ = this.baseUrl + \"/api/country/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetCountry(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetCountry(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<CountryListItem>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<CountryListItem>;\r\n        }));\r\n    }\r\n\r\n    protected processGetCountry(response: HttpResponseBase): Observable<CountryListItem> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = CountryListItem.fromJS(resultData200);\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<CountryListItem>(null as any);\r\n    }\r\n\r\n    getCountryInfos(): Observable<CountryInfo[]> {\r\n        let url_ = this.baseUrl + \"/api/country/infos\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetCountryInfos(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetCountryInfos(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<CountryInfo[]>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<CountryInfo[]>;\r\n        }));\r\n    }\r\n\r\n    protected processGetCountryInfos(response: HttpResponseBase): Observable<CountryInfo[]> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(CountryInfo.fromJS(item));\r\n            }\r\n            else {\r\n                result200 = <any>null;\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<CountryInfo[]>(null as any);\r\n    }\r\n\r\n    getCountryListItems(): Observable<CountryListItem[]> {\r\n        let url_ = this.baseUrl + \"/api/country/list\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetCountryListItems(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetCountryListItems(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<CountryListItem[]>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<CountryListItem[]>;\r\n        }));\r\n    }\r\n\r\n    protected processGetCountryListItems(response: HttpResponseBase): Observable<CountryListItem[]> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(CountryListItem.fromJS(item));\r\n            }\r\n            else {\r\n                result200 = <any>null;\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<CountryListItem[]>(null as any);\r\n    }\r\n\r\n    insertCountry(item: CountryListItem): Observable<void> {\r\n        let url_ = this.baseUrl + \"/api/country\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(item);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processInsertCountry(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processInsertCountry(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<void>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<void>;\r\n        }));\r\n    }\r\n\r\n    protected processInsertCountry(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(null as any);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(null as any);\r\n    }\r\n\r\n    updateCountry(item: CountryListItem): Observable<void> {\r\n        let url_ = this.baseUrl + \"/api/country\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(item);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processUpdateCountry(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processUpdateCountry(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<void>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<void>;\r\n        }));\r\n    }\r\n\r\n    protected processUpdateCountry(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(null as any);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(null as any);\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class EmployeeServiceClient {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"http://localhost:5001\";\r\n    }\r\n\r\n    delete(id: string): Observable<void> {\r\n        let url_ = this.baseUrl + \"/api/employee/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processDelete(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processDelete(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<void>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<void>;\r\n        }));\r\n    }\r\n\r\n    protected processDelete(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(null as any);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(null as any);\r\n    }\r\n\r\n    getEmployeeListItem(id: string): Observable<EmployeeListItem> {\r\n        let url_ = this.baseUrl + \"/api/employee/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetEmployeeListItem(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetEmployeeListItem(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<EmployeeListItem>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<EmployeeListItem>;\r\n        }));\r\n    }\r\n\r\n    protected processGetEmployeeListItem(response: HttpResponseBase): Observable<EmployeeListItem> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = EmployeeListItem.fromJS(resultData200);\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<EmployeeListItem>(null as any);\r\n    }\r\n\r\n    getEmployeeInfos(projectId: string): Observable<EmployeeInfo[]> {\r\n        let url_ = this.baseUrl + \"/api/employee/{projectId}/all\";\r\n        if (projectId === undefined || projectId === null)\r\n            throw new Error(\"The parameter 'projectId' must be defined.\");\r\n        url_ = url_.replace(\"{projectId}\", encodeURIComponent(\"\" + projectId));\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetEmployeeInfos(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetEmployeeInfos(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<EmployeeInfo[]>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<EmployeeInfo[]>;\r\n        }));\r\n    }\r\n\r\n    protected processGetEmployeeInfos(response: HttpResponseBase): Observable<EmployeeInfo[]> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(EmployeeInfo.fromJS(item));\r\n            }\r\n            else {\r\n                result200 = <any>null;\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<EmployeeInfo[]>(null as any);\r\n    }\r\n\r\n    getEmployeeListItems(projectId: string): Observable<EmployeeListItem[]> {\r\n        let url_ = this.baseUrl + \"/api/employee/{projectId}/list\";\r\n        if (projectId === undefined || projectId === null)\r\n            throw new Error(\"The parameter 'projectId' must be defined.\");\r\n        url_ = url_.replace(\"{projectId}\", encodeURIComponent(\"\" + projectId));\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetEmployeeListItems(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetEmployeeListItems(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<EmployeeListItem[]>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<EmployeeListItem[]>;\r\n        }));\r\n    }\r\n\r\n    protected processGetEmployeeListItems(response: HttpResponseBase): Observable<EmployeeListItem[]> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(EmployeeListItem.fromJS(item));\r\n            }\r\n            else {\r\n                result200 = <any>null;\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<EmployeeListItem[]>(null as any);\r\n    }\r\n\r\n    insert(projectId: string, item: EmployeeListItem): Observable<void> {\r\n        let url_ = this.baseUrl + \"/api/employee/{projectId}\";\r\n        if (projectId === undefined || projectId === null)\r\n            throw new Error(\"The parameter 'projectId' must be defined.\");\r\n        url_ = url_.replace(\"{projectId}\", encodeURIComponent(\"\" + projectId));\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(item);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processInsert(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processInsert(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<void>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<void>;\r\n        }));\r\n    }\r\n\r\n    protected processInsert(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(null as any);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(null as any);\r\n    }\r\n\r\n    update(item: EmployeeListItem): Observable<void> {\r\n        let url_ = this.baseUrl + \"/api/employee\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(item);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processUpdate(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processUpdate(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<void>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<void>;\r\n        }));\r\n    }\r\n\r\n    protected processUpdate(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(null as any);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(null as any);\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class IssueServiceClient {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"http://localhost:5001\";\r\n    }\r\n\r\n    createIssue(item: IssueCreateItem): Observable<void> {\r\n        let url_ = this.baseUrl + \"/api/issue\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(item);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processCreateIssue(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processCreateIssue(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<void>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<void>;\r\n        }));\r\n    }\r\n\r\n    protected processCreateIssue(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(null as any);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(null as any);\r\n    }\r\n\r\n    deleteIssueType(id: string): Observable<void> {\r\n        let url_ = this.baseUrl + \"/api/issue/type/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processDeleteIssueType(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processDeleteIssueType(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<void>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<void>;\r\n        }));\r\n    }\r\n\r\n    protected processDeleteIssueType(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(null as any);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(null as any);\r\n    }\r\n\r\n    getIssueCreate(projectId: string): Observable<IssueCreateData> {\r\n        let url_ = this.baseUrl + \"/api/issue/{projectId}/create\";\r\n        if (projectId === undefined || projectId === null)\r\n            throw new Error(\"The parameter 'projectId' must be defined.\");\r\n        url_ = url_.replace(\"{projectId}\", encodeURIComponent(\"\" + projectId));\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetIssueCreate(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetIssueCreate(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<IssueCreateData>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<IssueCreateData>;\r\n        }));\r\n    }\r\n\r\n    protected processGetIssueCreate(response: HttpResponseBase): Observable<IssueCreateData> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = IssueCreateData.fromJS(resultData200);\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<IssueCreateData>(null as any);\r\n    }\r\n\r\n    getIssues(projectId: string, offset: number | undefined, count: number | undefined, totalCount: number | null | undefined): Observable<PagedListOfIssueListItem> {\r\n        let url_ = this.baseUrl + \"/api/issue/{projectId}/list?\";\r\n        if (projectId === undefined || projectId === null)\r\n            throw new Error(\"The parameter 'projectId' must be defined.\");\r\n        url_ = url_.replace(\"{projectId}\", encodeURIComponent(\"\" + projectId));\r\n        if (offset === null)\r\n            throw new Error(\"The parameter 'offset' cannot be null.\");\r\n        else if (offset !== undefined)\r\n            url_ += \"offset=\" + encodeURIComponent(\"\" + offset) + \"&\";\r\n        if (count === null)\r\n            throw new Error(\"The parameter 'count' cannot be null.\");\r\n        else if (count !== undefined)\r\n            url_ += \"count=\" + encodeURIComponent(\"\" + count) + \"&\";\r\n        if (totalCount !== undefined && totalCount !== null)\r\n            url_ += \"totalCount=\" + encodeURIComponent(\"\" + totalCount) + \"&\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetIssues(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetIssues(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<PagedListOfIssueListItem>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<PagedListOfIssueListItem>;\r\n        }));\r\n    }\r\n\r\n    protected processGetIssues(response: HttpResponseBase): Observable<PagedListOfIssueListItem> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = PagedListOfIssueListItem.fromJS(resultData200);\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<PagedListOfIssueListItem>(null as any);\r\n    }\r\n\r\n    getIssueType(id: string): Observable<IssueTypeListItem> {\r\n        let url_ = this.baseUrl + \"/api/issue/types/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetIssueType(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetIssueType(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<IssueTypeListItem>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<IssueTypeListItem>;\r\n        }));\r\n    }\r\n\r\n    protected processGetIssueType(response: HttpResponseBase): Observable<IssueTypeListItem> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = IssueTypeListItem.fromJS(resultData200);\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<IssueTypeListItem>(null as any);\r\n    }\r\n\r\n    getIssueTypeListItems(): Observable<IssueTypeListItem[]> {\r\n        let url_ = this.baseUrl + \"/api/issue/types/list\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetIssueTypeListItems(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetIssueTypeListItems(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<IssueTypeListItem[]>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<IssueTypeListItem[]>;\r\n        }));\r\n    }\r\n\r\n    protected processGetIssueTypeListItems(response: HttpResponseBase): Observable<IssueTypeListItem[]> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(IssueTypeListItem.fromJS(item));\r\n            }\r\n            else {\r\n                result200 = <any>null;\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<IssueTypeListItem[]>(null as any);\r\n    }\r\n\r\n    getIssueTypes(): Observable<IssueTypeInfo[]> {\r\n        let url_ = this.baseUrl + \"/api/issue/types\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetIssueTypes(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetIssueTypes(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<IssueTypeInfo[]>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<IssueTypeInfo[]>;\r\n        }));\r\n    }\r\n\r\n    protected processGetIssueTypes(response: HttpResponseBase): Observable<IssueTypeInfo[]> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(IssueTypeInfo.fromJS(item));\r\n            }\r\n            else {\r\n                result200 = <any>null;\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<IssueTypeInfo[]>(null as any);\r\n    }\r\n\r\n    insertIssueType(issue: IssueTypeListItem): Observable<void> {\r\n        let url_ = this.baseUrl + \"/api/issue/type\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(issue);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processInsertIssueType(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processInsertIssueType(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<void>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<void>;\r\n        }));\r\n    }\r\n\r\n    protected processInsertIssueType(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(null as any);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(null as any);\r\n    }\r\n\r\n    updateIssueType(issue: IssueTypeListItem): Observable<void> {\r\n        let url_ = this.baseUrl + \"/api/issue/type\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(issue);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processUpdateIssueType(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processUpdateIssueType(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<void>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<void>;\r\n        }));\r\n    }\r\n\r\n    protected processUpdateIssueType(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(null as any);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(null as any);\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class ProjectServiceClient {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"http://localhost:5001\";\r\n    }\r\n\r\n    getProjectByName(name: string | null): Observable<ProjectInfo> {\r\n        let url_ = this.baseUrl + \"/api/project/search/{name}\";\r\n        if (name === undefined || name === null)\r\n            throw new Error(\"The parameter 'name' must be defined.\");\r\n        url_ = url_.replace(\"{name}\", encodeURIComponent(\"\" + name));\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetProjectByName(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetProjectByName(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<ProjectInfo>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<ProjectInfo>;\r\n        }));\r\n    }\r\n\r\n    protected processGetProjectByName(response: HttpResponseBase): Observable<ProjectInfo> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = ProjectInfo.fromJS(resultData200);\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<ProjectInfo>(null as any);\r\n    }\r\n\r\n    getProjects(): Observable<ProjectInfo[]> {\r\n        let url_ = this.baseUrl + \"/api/project/all\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetProjects(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetProjects(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<ProjectInfo[]>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<ProjectInfo[]>;\r\n        }));\r\n    }\r\n\r\n    protected processGetProjects(response: HttpResponseBase): Observable<ProjectInfo[]> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(ProjectInfo.fromJS(item));\r\n            }\r\n            else {\r\n                result200 = <any>null;\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<ProjectInfo[]>(null as any);\r\n    }\r\n}\r\n\r\nexport class AreaInfo implements IAreaInfo {\r\n    areaName?: string | undefined;\r\n    id?: string;\r\n\r\n    constructor(data?: IAreaInfo) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.areaName = _data[\"areaName\"];\r\n            this.id = _data[\"id\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): AreaInfo {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new AreaInfo();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"areaName\"] = this.areaName;\r\n        data[\"id\"] = this.id;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport interface IAreaInfo {\r\n    areaName?: string | undefined;\r\n    id?: string;\r\n}\r\n\r\nexport class CountryListItem implements ICountryListItem {\r\n    id?: string;\r\n    isoTwo?: string | undefined;\r\n    name?: string | undefined;\r\n\r\n    constructor(data?: ICountryListItem) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"];\r\n            this.isoTwo = _data[\"isoTwo\"];\r\n            this.name = _data[\"name\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): CountryListItem {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new CountryListItem();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"isoTwo\"] = this.isoTwo;\r\n        data[\"name\"] = this.name;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport interface ICountryListItem {\r\n    id?: string;\r\n    isoTwo?: string | undefined;\r\n    name?: string | undefined;\r\n}\r\n\r\nexport class CountryInfo implements ICountryInfo {\r\n    displayString?: string | undefined;\r\n    id?: string;\r\n\r\n    constructor(data?: ICountryInfo) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.displayString = _data[\"displayString\"];\r\n            this.id = _data[\"id\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): CountryInfo {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new CountryInfo();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"displayString\"] = this.displayString;\r\n        data[\"id\"] = this.id;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport interface ICountryInfo {\r\n    displayString?: string | undefined;\r\n    id?: string;\r\n}\r\n\r\nexport class EmployeeInfo implements IEmployeeInfo {\r\n    displayName?: string | undefined;\r\n    id?: string;\r\n\r\n    constructor(data?: IEmployeeInfo) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.displayName = _data[\"displayName\"];\r\n            this.id = _data[\"id\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): EmployeeInfo {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new EmployeeInfo();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"displayName\"] = this.displayName;\r\n        data[\"id\"] = this.id;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport interface IEmployeeInfo {\r\n    displayName?: string | undefined;\r\n    id?: string;\r\n}\r\n\r\nexport class EmployeeListItem implements IEmployeeListItem {\r\n    created?: Date;\r\n    firstName?: string | undefined;\r\n    id?: string;\r\n    isDisabled?: boolean;\r\n    lastName?: string | undefined;\r\n\r\n    constructor(data?: IEmployeeListItem) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.created = _data[\"created\"] ? new Date(_data[\"created\"].toString()) : <any>undefined;\r\n            this.firstName = _data[\"firstName\"];\r\n            this.id = _data[\"id\"];\r\n            this.isDisabled = _data[\"isDisabled\"];\r\n            this.lastName = _data[\"lastName\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): EmployeeListItem {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new EmployeeListItem();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"created\"] = this.created ? this.created.toISOString() : <any>undefined;\r\n        data[\"firstName\"] = this.firstName;\r\n        data[\"id\"] = this.id;\r\n        data[\"isDisabled\"] = this.isDisabled;\r\n        data[\"lastName\"] = this.lastName;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport interface IEmployeeListItem {\r\n    created?: Date;\r\n    firstName?: string | undefined;\r\n    id?: string;\r\n    isDisabled?: boolean;\r\n    lastName?: string | undefined;\r\n}\r\n\r\nexport class IssueCreateItem implements IIssueCreateItem {\r\n    areaId?: string;\r\n    assignedToId?: string | undefined;\r\n    attachments?: string[] | undefined;\r\n    creationTime?: Date;\r\n    descripton?: string | undefined;\r\n    issueTypeId?: string;\r\n    title?: string | undefined;\r\n\r\n    constructor(data?: IIssueCreateItem) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.areaId = _data[\"areaId\"];\r\n            this.assignedToId = _data[\"assignedToId\"];\r\n            if (Array.isArray(_data[\"attachments\"])) {\r\n                this.attachments = [] as any;\r\n                for (let item of _data[\"attachments\"])\r\n                    this.attachments!.push(item);\r\n            }\r\n            this.creationTime = _data[\"creationTime\"] ? new Date(_data[\"creationTime\"].toString()) : <any>undefined;\r\n            this.descripton = _data[\"descripton\"];\r\n            this.issueTypeId = _data[\"issueTypeId\"];\r\n            this.title = _data[\"title\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): IssueCreateItem {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new IssueCreateItem();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"areaId\"] = this.areaId;\r\n        data[\"assignedToId\"] = this.assignedToId;\r\n        if (Array.isArray(this.attachments)) {\r\n            data[\"attachments\"] = [];\r\n            for (let item of this.attachments)\r\n                data[\"attachments\"].push(item);\r\n        }\r\n        data[\"creationTime\"] = this.creationTime ? this.creationTime.toISOString() : <any>undefined;\r\n        data[\"descripton\"] = this.descripton;\r\n        data[\"issueTypeId\"] = this.issueTypeId;\r\n        data[\"title\"] = this.title;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport interface IIssueCreateItem {\r\n    areaId?: string;\r\n    assignedToId?: string | undefined;\r\n    attachments?: string[] | undefined;\r\n    creationTime?: Date;\r\n    descripton?: string | undefined;\r\n    issueTypeId?: string;\r\n    title?: string | undefined;\r\n}\r\n\r\nexport class IssueCreateData implements IIssueCreateData {\r\n    employees?: EmployeeInfo[] | undefined;\r\n    issueTypes?: IssueTypeInfo[] | undefined;\r\n\r\n    constructor(data?: IIssueCreateData) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            if (Array.isArray(_data[\"employees\"])) {\r\n                this.employees = [] as any;\r\n                for (let item of _data[\"employees\"])\r\n                    this.employees!.push(EmployeeInfo.fromJS(item));\r\n            }\r\n            if (Array.isArray(_data[\"issueTypes\"])) {\r\n                this.issueTypes = [] as any;\r\n                for (let item of _data[\"issueTypes\"])\r\n                    this.issueTypes!.push(IssueTypeInfo.fromJS(item));\r\n            }\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): IssueCreateData {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new IssueCreateData();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        if (Array.isArray(this.employees)) {\r\n            data[\"employees\"] = [];\r\n            for (let item of this.employees)\r\n                data[\"employees\"].push(item.toJSON());\r\n        }\r\n        if (Array.isArray(this.issueTypes)) {\r\n            data[\"issueTypes\"] = [];\r\n            for (let item of this.issueTypes)\r\n                data[\"issueTypes\"].push(item.toJSON());\r\n        }\r\n        return data;\r\n    }\r\n}\r\n\r\nexport interface IIssueCreateData {\r\n    employees?: EmployeeInfo[] | undefined;\r\n    issueTypes?: IssueTypeInfo[] | undefined;\r\n}\r\n\r\nexport class IssueTypeInfo implements IIssueTypeInfo {\r\n    displayString?: string | undefined;\r\n    id?: string;\r\n\r\n    constructor(data?: IIssueTypeInfo) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.displayString = _data[\"displayString\"];\r\n            this.id = _data[\"id\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): IssueTypeInfo {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new IssueTypeInfo();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"displayString\"] = this.displayString;\r\n        data[\"id\"] = this.id;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport interface IIssueTypeInfo {\r\n    displayString?: string | undefined;\r\n    id?: string;\r\n}\r\n\r\nexport class PagedListOfIssueListItem implements IPagedListOfIssueListItem {\r\n    items?: IssueListItem[] | undefined;\r\n    totalCount?: number;\r\n\r\n    constructor(data?: IPagedListOfIssueListItem) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            if (Array.isArray(_data[\"items\"])) {\r\n                this.items = [] as any;\r\n                for (let item of _data[\"items\"])\r\n                    this.items!.push(IssueListItem.fromJS(item));\r\n            }\r\n            this.totalCount = _data[\"totalCount\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): PagedListOfIssueListItem {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new PagedListOfIssueListItem();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        if (Array.isArray(this.items)) {\r\n            data[\"items\"] = [];\r\n            for (let item of this.items)\r\n                data[\"items\"].push(item.toJSON());\r\n        }\r\n        data[\"totalCount\"] = this.totalCount;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport interface IPagedListOfIssueListItem {\r\n    items?: IssueListItem[] | undefined;\r\n    totalCount?: number;\r\n}\r\n\r\nexport class IssueListItem implements IIssueListItem {\r\n    assignedTo?: string | undefined;\r\n    createTime?: Date;\r\n    description?: string | undefined;\r\n    id?: string;\r\n    issueType?: string | undefined;\r\n    title?: string | undefined;\r\n\r\n    constructor(data?: IIssueListItem) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.assignedTo = _data[\"assignedTo\"];\r\n            this.createTime = _data[\"createTime\"] ? new Date(_data[\"createTime\"].toString()) : <any>undefined;\r\n            this.description = _data[\"description\"];\r\n            this.id = _data[\"id\"];\r\n            this.issueType = _data[\"issueType\"];\r\n            this.title = _data[\"title\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): IssueListItem {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new IssueListItem();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"assignedTo\"] = this.assignedTo;\r\n        data[\"createTime\"] = this.createTime ? this.createTime.toISOString() : <any>undefined;\r\n        data[\"description\"] = this.description;\r\n        data[\"id\"] = this.id;\r\n        data[\"issueType\"] = this.issueType;\r\n        data[\"title\"] = this.title;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport interface IIssueListItem {\r\n    assignedTo?: string | undefined;\r\n    createTime?: Date;\r\n    description?: string | undefined;\r\n    id?: string;\r\n    issueType?: string | undefined;\r\n    title?: string | undefined;\r\n}\r\n\r\nexport class IssueTypeListItem implements IIssueTypeListItem {\r\n    description?: string | undefined;\r\n    id?: string;\r\n    title?: string | undefined;\r\n\r\n    constructor(data?: IIssueTypeListItem) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.description = _data[\"description\"];\r\n            this.id = _data[\"id\"];\r\n            this.title = _data[\"title\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): IssueTypeListItem {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new IssueTypeListItem();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"description\"] = this.description;\r\n        data[\"id\"] = this.id;\r\n        data[\"title\"] = this.title;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport interface IIssueTypeListItem {\r\n    description?: string | undefined;\r\n    id?: string;\r\n    title?: string | undefined;\r\n}\r\n\r\nexport class ProjectInfo implements IProjectInfo {\r\n    displayString?: string | undefined;\r\n    id?: string;\r\n\r\n    constructor(data?: IProjectInfo) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.displayString = _data[\"displayString\"];\r\n            this.id = _data[\"id\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): ProjectInfo {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new ProjectInfo();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"displayString\"] = this.displayString;\r\n        data[\"id\"] = this.id;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport interface IProjectInfo {\r\n    displayString?: string | undefined;\r\n    id?: string;\r\n}\r\n\r\nexport class ApiException extends Error {\r\n    message: string;\r\n    status: number;\r\n    response: string;\r\n    headers: { [key: string]: any; };\r\n    result: any;\r\n\r\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\r\n        super();\r\n\r\n        this.message = message;\r\n        this.status = status;\r\n        this.response = response;\r\n        this.headers = headers;\r\n        this.result = result;\r\n    }\r\n\r\n    protected isApiException = true;\r\n\r\n    static isApiException(obj: any): obj is ApiException {\r\n        return obj.isApiException === true;\r\n    }\r\n}\r\n\r\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable<any> {\r\n    if (result !== null && result !== undefined)\r\n        return _observableThrow(result);\r\n    else\r\n        return _observableThrow(new ApiException(message, status, response, headers, null));\r\n}\r\n\r\nfunction blobToText(blob: any): Observable<string> {\r\n    return new Observable<string>((observer: any) => {\r\n        if (!blob) {\r\n            observer.next(\"\");\r\n            observer.complete();\r\n        } else {\r\n            let reader = new FileReader();\r\n            reader.onload = event => {\r\n                observer.next((event.target as any).result);\r\n                observer.complete();\r\n            };\r\n            reader.readAsText(blob);\r\n        }\r\n    });\r\n}"],"names":["i0","AppComponent","constructor","projectService","ngOnInit","initialize","selectProject","projectid","current","projects","filter","p","id","selectors","decls","vars","consts","template","ctx","ctx_r3","ctx_r5","CountriesListComponent","service","data","getCountryListItems","toPromise","items","select","item","selectedItem","delete","deleteCountry","CountryListItem","ctx_r4","ctx_r0","CountryCreateComponent","route","router","save","insertCountry","url","getNavUrl","navigateByUrl","parent","snapshot","pathFromRoot","map","join","CountryEditComponent","params","getCountry","updateCountry","EmployeeListItem","EmployeeCreateComponent","pipe","_a","subscribe","project","insert","EmployeeEditComponent","loadData","getEmployeeListItem","update","EmployeesListComponent","currentRoute","getEmployeeListItems","IssueTypeListItem","IssueTypeCreateComponent","insertIssueType","IssueTypeEditComponent","getIssueType","updateIssueType","IssueTypesListComponent","getIssueTypeListItems","deleteIssueType","IssueListComponent","totalCount","pageChanged","event","currentPage","page","getIssues","undefined","ProjectIdResolver","resolve","state","projectName","getProjectByName","factory","NavigationEnd","ProjectService","events","e","console","log","_current","value","displayString","getProjects","newProject","root","routerState","firstChild","routeConfig","path"],"sourceRoot":"webpack:///"}